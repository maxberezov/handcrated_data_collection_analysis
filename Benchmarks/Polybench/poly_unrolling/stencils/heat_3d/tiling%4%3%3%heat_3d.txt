GENERATED TILE DIRECTION=TP - LOCAL TILE DIRECTION=LP
void kernel_heat_3d(int tsteps, int n, double A[120+0][120+0][120+0], double B[120+0][120+0][120+0])
{
   int t, i, j, k;
   //PIPS generated variable
   int j_t, k_t, j_l, k_l;

#pragma scop
   polybench_timer_start();

   for(i = 1; i <= n-1-1; i += 1)
loop_1:
      for(j_t = ((((-n+3)/16)>(((((-n+3)/8)>(((-3*n+9)/8))) ? ((-n+3)/8): (((-3*n+9)/8))))) ? ((-n+3)/16): (((((-n+3)/8)>(((-3*n+9)/8))) ? ((-n+3)/8): (((-3*n+9)/8))))); j_t <= ((((n-3)/4)<(((((7*n-21)/16)<(((((9*n-27)/16)<(((((11*n-33)/16)<(((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))) ? ((11*n-33)/16): (((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))))) ? ((9*n-27)/16): (((((11*n-33)/16)<(((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))) ? ((11*n-33)/16): (((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))))))) ? ((7*n-21)/16): (((((9*n-27)/16)<(((((11*n-33)/16)<(((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))) ? ((11*n-33)/16): (((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))))) ? ((9*n-27)/16): (((((11*n-33)/16)<(((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))) ? ((11*n-33)/16): (((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))))))))) ? ((n-3)/4): (((((7*n-21)/16)<(((((9*n-27)/16)<(((((11*n-33)/16)<(((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))) ? ((11*n-33)/16): (((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))))) ? ((9*n-27)/16): (((((11*n-33)/16)<(((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))) ? ((11*n-33)/16): (((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))))))) ? ((7*n-21)/16): (((((9*n-27)/16)<(((((11*n-33)/16)<(((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))) ? ((11*n-33)/16): (((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))))) ? ((9*n-27)/16): (((((11*n-33)/16)<(((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))) ? ((11*n-33)/16): (((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))))))))); j_t += 1)
         for(k_t = (((-2*j_t-2)>(((((-32*j_t-n-11)/24)>(((((-24*j_t-n-4)/20)>(((((-16*j_t-n+3)/16)>(((((-8*j_t-n+7)/12)>(((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*j_t-n+7)/12): (((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))) ? ((-16*j_t-n+3)/16): (((((-8*j_t-n+7)/12)>(((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*j_t-n+7)/12): (((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))))) ? ((-24*j_t-n-4)/20): (((((-16*j_t-n+3)/16)>(((((-8*j_t-n+7)/12)>(((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*j_t-n+7)/12): (((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))) ? ((-16*j_t-n+3)/16): (((((-8*j_t-n+7)/12)>(((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*j_t-n+7)/12): (((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))))))) ? ((-32*j_t-n-11)/24): (((((-24*j_t-n-4)/20)>(((((-16*j_t-n+3)/16)>(((((-8*j_t-n+7)/12)>(((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*j_t-n+7)/12): (((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))) ? ((-16*j_t-n+3)/16): (((((-8*j_t-n+7)/12)>(((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*j_t-n+7)/12): (((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))))) ? ((-24*j_t-n-4)/20): (((((-16*j_t-n+3)/16)>(((((-8*j_t-n+7)/12)>(((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*j_t-n+7)/12): (((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))) ? ((-16*j_t-n+3)/16): (((((-8*j_t-n+7)/12)>(((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*j_t-n+7)/12): (((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))))))))) ? (-2*j_t-2): (((((-32*j_t-n-11)/24)>(((((-24*j_t-n-4)/20)>(((((-16*j_t-n+3)/16)>(((((-8*j_t-n+7)/12)>(((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*j_t-n+7)/12): (((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))) ? ((-16*j_t-n+3)/16): (((((-8*j_t-n+7)/12)>(((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*j_t-n+7)/12): (((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))))) ? ((-24*j_t-n-4)/20): (((((-16*j_t-n+3)/16)>(((((-8*j_t-n+7)/12)>(((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*j_t-n+7)/12): (((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))) ? ((-16*j_t-n+3)/16): (((((-8*j_t-n+7)/12)>(((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*j_t-n+7)/12): (((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))))))) ? ((-32*j_t-n-11)/24): (((((-24*j_t-n-4)/20)>(((((-16*j_t-n+3)/16)>(((((-8*j_t-n+7)/12)>(((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*j_t-n+7)/12): (((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))) ? ((-16*j_t-n+3)/16): (((((-8*j_t-n+7)/12)>(((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*j_t-n+7)/12): (((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))))) ? ((-24*j_t-n-4)/20): (((((-16*j_t-n+3)/16)>(((((-8*j_t-n+7)/12)>(((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*j_t-n+7)/12): (((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))) ? ((-16*j_t-n+3)/16): (((((-8*j_t-n+7)/12)>(((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*j_t-n+7)/12): (((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))))))))); k_t <= (((-2*j_t/3)<(((((-8*j_t+n-3)/4)<(((((-16*j_t+n-3)/16)<(((-32*j_t+3*n-9)/24))) ? ((-16*j_t+n-3)/16): (((-32*j_t+3*n-9)/24))))) ? ((-8*j_t+n-3)/4): (((((-16*j_t+n-3)/16)<(((-32*j_t+3*n-9)/24))) ? ((-16*j_t+n-3)/16): (((-32*j_t+3*n-9)/24))))))) ? (-2*j_t/3): (((((-8*j_t+n-3)/4)<(((((-16*j_t+n-3)/16)<(((-32*j_t+3*n-9)/24))) ? ((-16*j_t+n-3)/16): (((-32*j_t+3*n-9)/24))))) ? ((-8*j_t+n-3)/4): (((((-16*j_t+n-3)/16)<(((-32*j_t+3*n-9)/24))) ? ((-16*j_t+n-3)/16): (((-32*j_t+3*n-9)/24))))))); k_t += 1)
            for(j_l = (((16*j_t+16*k_t+2)>((((32*j_t+24*k_t+2)>((((8*k_t-5)>((((-24*k_t-4*n+14)>((-n+5))) ? (-24*k_t-4*n+14): ((-n+5))))) ? (8*k_t-5): ((((-24*k_t-4*n+14)>((-n+5))) ? (-24*k_t-4*n+14): ((-n+5))))))) ? (32*j_t+24*k_t+2): ((((8*k_t-5)>((((-24*k_t-4*n+14)>((-n+5))) ? (-24*k_t-4*n+14): ((-n+5))))) ? (8*k_t-5): ((((-24*k_t-4*n+14)>((-n+5))) ? (-24*k_t-4*n+14): ((-n+5))))))))) ? (16*j_t+16*k_t+2): ((((32*j_t+24*k_t+2)>((((8*k_t-5)>((((-24*k_t-4*n+14)>((-n+5))) ? (-24*k_t-4*n+14): ((-n+5))))) ? (8*k_t-5): ((((-24*k_t-4*n+14)>((-n+5))) ? (-24*k_t-4*n+14): ((-n+5))))))) ? (32*j_t+24*k_t+2): ((((8*k_t-5)>((((-24*k_t-4*n+14)>((-n+5))) ? (-24*k_t-4*n+14): ((-n+5))))) ? (8*k_t-5): ((((-24*k_t-4*n+14)>((-n+5))) ? (-24*k_t-4*n+14): ((-n+5))))))))); j_l <= (((32*j_t+24*k_t+39)<((((48*j_t+48*k_t+2*n+41)<((((16*j_t+16*k_t+2*n+11)<((((-24*k_t+23)<((((8*k_t+4*n-10)<((3*n-7))) ? (8*k_t+4*n-10): ((3*n-7))))) ? (-24*k_t+23): ((((8*k_t+4*n-10)<((3*n-7))) ? (8*k_t+4*n-10): ((3*n-7))))))) ? (16*j_t+16*k_t+2*n+11): ((((-24*k_t+23)<((((8*k_t+4*n-10)<((3*n-7))) ? (8*k_t+4*n-10): ((3*n-7))))) ? (-24*k_t+23): ((((8*k_t+4*n-10)<((3*n-7))) ? (8*k_t+4*n-10): ((3*n-7))))))))) ? (48*j_t+48*k_t+2*n+41): ((((16*j_t+16*k_t+2*n+11)<((((-24*k_t+23)<((((8*k_t+4*n-10)<((3*n-7))) ? (8*k_t+4*n-10): ((3*n-7))))) ? (-24*k_t+23): ((((8*k_t+4*n-10)<((3*n-7))) ? (8*k_t+4*n-10): ((3*n-7))))))) ? (16*j_t+16*k_t+2*n+11): ((((-24*k_t+23)<((((8*k_t+4*n-10)<((3*n-7))) ? (8*k_t+4*n-10): ((3*n-7))))) ? (-24*k_t+23): ((((8*k_t+4*n-10)<((3*n-7))) ? (8*k_t+4*n-10): ((3*n-7))))))))))) ? (32*j_t+24*k_t+39): ((((48*j_t+48*k_t+2*n+41)<((((16*j_t+16*k_t+2*n+11)<((((-24*k_t+23)<((((8*k_t+4*n-10)<((3*n-7))) ? (8*k_t+4*n-10): ((3*n-7))))) ? (-24*k_t+23): ((((8*k_t+4*n-10)<((3*n-7))) ? (8*k_t+4*n-10): ((3*n-7))))))) ? (16*j_t+16*k_t+2*n+11): ((((-24*k_t+23)<((((8*k_t+4*n-10)<((3*n-7))) ? (8*k_t+4*n-10): ((3*n-7))))) ? (-24*k_t+23): ((((8*k_t+4*n-10)<((3*n-7))) ? (8*k_t+4*n-10): ((3*n-7))))))))) ? (48*j_t+48*k_t+2*n+41): ((((16*j_t+16*k_t+2*n+11)<((((-24*k_t+23)<((((8*k_t+4*n-10)<((3*n-7))) ? (8*k_t+4*n-10): ((3*n-7))))) ? (-24*k_t+23): ((((8*k_t+4*n-10)<((3*n-7))) ? (8*k_t+4*n-10): ((3*n-7))))))) ? (16*j_t+16*k_t+2*n+11): ((((-24*k_t+23)<((((8*k_t+4*n-10)<((3*n-7))) ? (8*k_t+4*n-10): ((3*n-7))))) ? (-24*k_t+23): ((((8*k_t+4*n-10)<((3*n-7))) ? (8*k_t+4*n-10): ((3*n-7))))))))))); j_l += 1)
               for(k_l = ((((j_l-16*j_t-16*k_t-14)/2)>(((((j_l+3)/3)>(((((j_l-8*k_t+5)/4)>((1))) ? ((j_l-8*k_t+5)/4): ((1))))) ? ((j_l+3)/3): (((((j_l-8*k_t+5)/4)>((1))) ? ((j_l-8*k_t+5)/4): ((1))))))) ? ((j_l-16*j_t-16*k_t-14)/2): (((((j_l+3)/3)>(((((j_l-8*k_t+5)/4)>((1))) ? ((j_l-8*k_t+5)/4): ((1))))) ? ((j_l+3)/3): (((((j_l-8*k_t+5)/4)>((1))) ? ((j_l-8*k_t+5)/4): ((1))))))); k_l <= ((((j_l-16*j_t-16*k_t)/2)<(((((j_l-8*k_t+9)/4)<(((((j_l+n-2)/3)<((n-2))) ? ((j_l+n-2)/3): ((n-2))))) ? ((j_l-8*k_t+9)/4): (((((j_l+n-2)/3)<((n-2))) ? ((j_l+n-2)/3): ((n-2))))))) ? ((j_l-16*j_t-16*k_t)/2): (((((j_l-8*k_t+9)/4)<(((((j_l+n-2)/3)<((n-2))) ? ((j_l+n-2)/3): ((n-2))))) ? ((j_l-8*k_t+9)/4): (((((j_l+n-2)/3)<((n-2))) ? ((j_l+n-2)/3): ((n-2))))))); k_l += 1)
                  B[i][k_l][-j_l+3*k_l] = 0.125*(A[i+1][k_l][-j_l+3*k_l]-2.0*A[i][k_l][-j_l+3*k_l]+A[i-1][k_l][-j_l+3*k_l])+0.125*(A[i][k_l+1][-j_l+3*k_l]-2.0*A[i][k_l][-j_l+3*k_l]+A[i][k_l-1][-j_l+3*k_l])+0.125*(A[i][k_l][-j_l+3*k_l+1]-2.0*A[i][k_l][-j_l+3*k_l]+A[i][k_l][-j_l+3*k_l-1])+A[i][k_l][-j_l+3*k_l];
   polybench_timer_stop();

   polybench_timer_print();
#pragma endscop

}
void kernel_heat_3d(int tsteps, int n, double A[120+0][120+0][120+0], double B[120+0][120+0][120+0])
{
   int t, i, j, k;
   //PIPS generated variable
   int j_t, k_t, j_l, k_l;

#pragma scop
   polybench_timer_start();

   for(i = 1; i <= n-1-1; i += 1)
loop_1:
      for(j_t = ((((-n+3)/16)>(((((-n+3)/8)>(((-3*n+9)/8))) ? ((-n+3)/8): (((-3*n+9)/8))))) ? ((-n+3)/16): (((((-n+3)/8)>(((-3*n+9)/8))) ? ((-n+3)/8): (((-3*n+9)/8))))); j_t <= ((((n-3)/4)<(((((7*n-21)/16)<(((((9*n-27)/16)<(((((11*n-33)/16)<(((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))) ? ((11*n-33)/16): (((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))))) ? ((9*n-27)/16): (((((11*n-33)/16)<(((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))) ? ((11*n-33)/16): (((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))))))) ? ((7*n-21)/16): (((((9*n-27)/16)<(((((11*n-33)/16)<(((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))) ? ((11*n-33)/16): (((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))))) ? ((9*n-27)/16): (((((11*n-33)/16)<(((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))) ? ((11*n-33)/16): (((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))))))))) ? ((n-3)/4): (((((7*n-21)/16)<(((((9*n-27)/16)<(((((11*n-33)/16)<(((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))) ? ((11*n-33)/16): (((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))))) ? ((9*n-27)/16): (((((11*n-33)/16)<(((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))) ? ((11*n-33)/16): (((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))))))) ? ((7*n-21)/16): (((((9*n-27)/16)<(((((11*n-33)/16)<(((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))) ? ((11*n-33)/16): (((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))))) ? ((9*n-27)/16): (((((11*n-33)/16)<(((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))) ? ((11*n-33)/16): (((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))))))))); j_t += 1)
         for(k_t = (((-2*j_t-2)>(((((-32*j_t-n-11)/24)>(((((-24*j_t-n-4)/20)>(((((-16*j_t-n+3)/16)>(((((-8*j_t-n+7)/12)>(((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*j_t-n+7)/12): (((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))) ? ((-16*j_t-n+3)/16): (((((-8*j_t-n+7)/12)>(((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*j_t-n+7)/12): (((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))))) ? ((-24*j_t-n-4)/20): (((((-16*j_t-n+3)/16)>(((((-8*j_t-n+7)/12)>(((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*j_t-n+7)/12): (((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))) ? ((-16*j_t-n+3)/16): (((((-8*j_t-n+7)/12)>(((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*j_t-n+7)/12): (((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))))))) ? ((-32*j_t-n-11)/24): (((((-24*j_t-n-4)/20)>(((((-16*j_t-n+3)/16)>(((((-8*j_t-n+7)/12)>(((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*j_t-n+7)/12): (((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))) ? ((-16*j_t-n+3)/16): (((((-8*j_t-n+7)/12)>(((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*j_t-n+7)/12): (((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))))) ? ((-24*j_t-n-4)/20): (((((-16*j_t-n+3)/16)>(((((-8*j_t-n+7)/12)>(((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*j_t-n+7)/12): (((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))) ? ((-16*j_t-n+3)/16): (((((-8*j_t-n+7)/12)>(((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*j_t-n+7)/12): (((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))))))))) ? (-2*j_t-2): (((((-32*j_t-n-11)/24)>(((((-24*j_t-n-4)/20)>(((((-16*j_t-n+3)/16)>(((((-8*j_t-n+7)/12)>(((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*j_t-n+7)/12): (((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))) ? ((-16*j_t-n+3)/16): (((((-8*j_t-n+7)/12)>(((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*j_t-n+7)/12): (((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))))) ? ((-24*j_t-n-4)/20): (((((-16*j_t-n+3)/16)>(((((-8*j_t-n+7)/12)>(((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*j_t-n+7)/12): (((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))) ? ((-16*j_t-n+3)/16): (((((-8*j_t-n+7)/12)>(((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*j_t-n+7)/12): (((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))))))) ? ((-32*j_t-n-11)/24): (((((-24*j_t-n-4)/20)>(((((-16*j_t-n+3)/16)>(((((-8*j_t-n+7)/12)>(((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*j_t-n+7)/12): (((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))) ? ((-16*j_t-n+3)/16): (((((-8*j_t-n+7)/12)>(((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*j_t-n+7)/12): (((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))))) ? ((-24*j_t-n-4)/20): (((((-16*j_t-n+3)/16)>(((((-8*j_t-n+7)/12)>(((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*j_t-n+7)/12): (((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))) ? ((-16*j_t-n+3)/16): (((((-8*j_t-n+7)/12)>(((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*j_t-n+7)/12): (((((-8*j_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*j_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))))))))); k_t <= (((-2*j_t/3)<(((((-8*j_t+n-3)/4)<(((((-16*j_t+n-3)/16)<(((-32*j_t+3*n-9)/24))) ? ((-16*j_t+n-3)/16): (((-32*j_t+3*n-9)/24))))) ? ((-8*j_t+n-3)/4): (((((-16*j_t+n-3)/16)<(((-32*j_t+3*n-9)/24))) ? ((-16*j_t+n-3)/16): (((-32*j_t+3*n-9)/24))))))) ? (-2*j_t/3): (((((-8*j_t+n-3)/4)<(((((-16*j_t+n-3)/16)<(((-32*j_t+3*n-9)/24))) ? ((-16*j_t+n-3)/16): (((-32*j_t+3*n-9)/24))))) ? ((-8*j_t+n-3)/4): (((((-16*j_t+n-3)/16)<(((-32*j_t+3*n-9)/24))) ? ((-16*j_t+n-3)/16): (((-32*j_t+3*n-9)/24))))))); k_t += 1)
            for(j_l = (((16*j_t+16*k_t+2)>((((32*j_t+24*k_t+2)>((((8*k_t-5)>((((-24*k_t-4*n+14)>((-n+5))) ? (-24*k_t-4*n+14): ((-n+5))))) ? (8*k_t-5): ((((-24*k_t-4*n+14)>((-n+5))) ? (-24*k_t-4*n+14): ((-n+5))))))) ? (32*j_t+24*k_t+2): ((((8*k_t-5)>((((-24*k_t-4*n+14)>((-n+5))) ? (-24*k_t-4*n+14): ((-n+5))))) ? (8*k_t-5): ((((-24*k_t-4*n+14)>((-n+5))) ? (-24*k_t-4*n+14): ((-n+5))))))))) ? (16*j_t+16*k_t+2): ((((32*j_t+24*k_t+2)>((((8*k_t-5)>((((-24*k_t-4*n+14)>((-n+5))) ? (-24*k_t-4*n+14): ((-n+5))))) ? (8*k_t-5): ((((-24*k_t-4*n+14)>((-n+5))) ? (-24*k_t-4*n+14): ((-n+5))))))) ? (32*j_t+24*k_t+2): ((((8*k_t-5)>((((-24*k_t-4*n+14)>((-n+5))) ? (-24*k_t-4*n+14): ((-n+5))))) ? (8*k_t-5): ((((-24*k_t-4*n+14)>((-n+5))) ? (-24*k_t-4*n+14): ((-n+5))))))))); j_l <= (((32*j_t+24*k_t+39)<((((48*j_t+48*k_t+2*n+41)<((((16*j_t+16*k_t+2*n+11)<((((-24*k_t+23)<((((8*k_t+4*n-10)<((3*n-7))) ? (8*k_t+4*n-10): ((3*n-7))))) ? (-24*k_t+23): ((((8*k_t+4*n-10)<((3*n-7))) ? (8*k_t+4*n-10): ((3*n-7))))))) ? (16*j_t+16*k_t+2*n+11): ((((-24*k_t+23)<((((8*k_t+4*n-10)<((3*n-7))) ? (8*k_t+4*n-10): ((3*n-7))))) ? (-24*k_t+23): ((((8*k_t+4*n-10)<((3*n-7))) ? (8*k_t+4*n-10): ((3*n-7))))))))) ? (48*j_t+48*k_t+2*n+41): ((((16*j_t+16*k_t+2*n+11)<((((-24*k_t+23)<((((8*k_t+4*n-10)<((3*n-7))) ? (8*k_t+4*n-10): ((3*n-7))))) ? (-24*k_t+23): ((((8*k_t+4*n-10)<((3*n-7))) ? (8*k_t+4*n-10): ((3*n-7))))))) ? (16*j_t+16*k_t+2*n+11): ((((-24*k_t+23)<((((8*k_t+4*n-10)<((3*n-7))) ? (8*k_t+4*n-10): ((3*n-7))))) ? (-24*k_t+23): ((((8*k_t+4*n-10)<((3*n-7))) ? (8*k_t+4*n-10): ((3*n-7))))))))))) ? (32*j_t+24*k_t+39): ((((48*j_t+48*k_t+2*n+41)<((((16*j_t+16*k_t+2*n+11)<((((-24*k_t+23)<((((8*k_t+4*n-10)<((3*n-7))) ? (8*k_t+4*n-10): ((3*n-7))))) ? (-24*k_t+23): ((((8*k_t+4*n-10)<((3*n-7))) ? (8*k_t+4*n-10): ((3*n-7))))))) ? (16*j_t+16*k_t+2*n+11): ((((-24*k_t+23)<((((8*k_t+4*n-10)<((3*n-7))) ? (8*k_t+4*n-10): ((3*n-7))))) ? (-24*k_t+23): ((((8*k_t+4*n-10)<((3*n-7))) ? (8*k_t+4*n-10): ((3*n-7))))))))) ? (48*j_t+48*k_t+2*n+41): ((((16*j_t+16*k_t+2*n+11)<((((-24*k_t+23)<((((8*k_t+4*n-10)<((3*n-7))) ? (8*k_t+4*n-10): ((3*n-7))))) ? (-24*k_t+23): ((((8*k_t+4*n-10)<((3*n-7))) ? (8*k_t+4*n-10): ((3*n-7))))))) ? (16*j_t+16*k_t+2*n+11): ((((-24*k_t+23)<((((8*k_t+4*n-10)<((3*n-7))) ? (8*k_t+4*n-10): ((3*n-7))))) ? (-24*k_t+23): ((((8*k_t+4*n-10)<((3*n-7))) ? (8*k_t+4*n-10): ((3*n-7))))))))))); j_l += 1)
               for(k_l = ((((j_l-16*j_t-16*k_t-14)/2)>(((((j_l+3)/3)>(((((j_l-8*k_t+5)/4)>((1))) ? ((j_l-8*k_t+5)/4): ((1))))) ? ((j_l+3)/3): (((((j_l-8*k_t+5)/4)>((1))) ? ((j_l-8*k_t+5)/4): ((1))))))) ? ((j_l-16*j_t-16*k_t-14)/2): (((((j_l+3)/3)>(((((j_l-8*k_t+5)/4)>((1))) ? ((j_l-8*k_t+5)/4): ((1))))) ? ((j_l+3)/3): (((((j_l-8*k_t+5)/4)>((1))) ? ((j_l-8*k_t+5)/4): ((1))))))); k_l <= ((((j_l-16*j_t-16*k_t)/2)<(((((j_l-8*k_t+9)/4)<(((((j_l+n-2)/3)<((n-2))) ? ((j_l+n-2)/3): ((n-2))))) ? ((j_l-8*k_t+9)/4): (((((j_l+n-2)/3)<((n-2))) ? ((j_l+n-2)/3): ((n-2))))))) ? ((j_l-16*j_t-16*k_t)/2): (((((j_l-8*k_t+9)/4)<(((((j_l+n-2)/3)<((n-2))) ? ((j_l+n-2)/3): ((n-2))))) ? ((j_l-8*k_t+9)/4): (((((j_l+n-2)/3)<((n-2))) ? ((j_l+n-2)/3): ((n-2))))))); k_l += 1)
                  B[i][k_l][-j_l+3*k_l] = 0.125*(A[i+1][k_l][-j_l+3*k_l]-2.0*A[i][k_l][-j_l+3*k_l]+A[i-1][k_l][-j_l+3*k_l])+0.125*(A[i][k_l+1][-j_l+3*k_l]-2.0*A[i][k_l][-j_l+3*k_l]+A[i][k_l-1][-j_l+3*k_l])+0.125*(A[i][k_l][-j_l+3*k_l+1]-2.0*A[i][k_l][-j_l+3*k_l]+A[i][k_l][-j_l+3*k_l-1])+A[i][k_l][-j_l+3*k_l];
   polybench_timer_stop();

   polybench_timer_print();
#pragma endscop

}
