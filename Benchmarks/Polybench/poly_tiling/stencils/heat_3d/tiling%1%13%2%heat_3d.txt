GENERATED TILE DIRECTION=TI - LOCAL TILE DIRECTION=LP
void kernel_heat_3d(int tsteps, int n, double A[40+0][40+0][40+0], double B[40+0][40+0][40+0])
{
   int t, i, j, k;
   //PIPS generated variable
   int j_t, k_t, j_l, k_l;

#pragma scop
   polybench_timer_start();

   for(i = 1; i <= n-1-1; i += 1)
loop_1:
      for(j_t = 0; j_t <= ((((3*n+19)/16)<(((((n-2)/6)<(((((2*n-3)/9)<(((((n-3)/12)<(((((n-3)/16)<(((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))) ? ((n-3)/16): (((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))))) ? ((n-3)/12): (((((n-3)/16)<(((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))) ? ((n-3)/16): (((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))))))) ? ((2*n-3)/9): (((((n-3)/12)<(((((n-3)/16)<(((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))) ? ((n-3)/16): (((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))))) ? ((n-3)/12): (((((n-3)/16)<(((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))) ? ((n-3)/16): (((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))))))))) ? ((n-2)/6): (((((2*n-3)/9)<(((((n-3)/12)<(((((n-3)/16)<(((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))) ? ((n-3)/16): (((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))))) ? ((n-3)/12): (((((n-3)/16)<(((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))) ? ((n-3)/16): (((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))))))) ? ((2*n-3)/9): (((((n-3)/12)<(((((n-3)/16)<(((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))) ? ((n-3)/16): (((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))))) ? ((n-3)/12): (((((n-3)/16)<(((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))) ? ((n-3)/16): (((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))))))))))) ? ((3*n+19)/16): (((((n-2)/6)<(((((2*n-3)/9)<(((((n-3)/12)<(((((n-3)/16)<(((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))) ? ((n-3)/16): (((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))))) ? ((n-3)/12): (((((n-3)/16)<(((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))) ? ((n-3)/16): (((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))))))) ? ((2*n-3)/9): (((((n-3)/12)<(((((n-3)/16)<(((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))) ? ((n-3)/16): (((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))))) ? ((n-3)/12): (((((n-3)/16)<(((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))) ? ((n-3)/16): (((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))))))))) ? ((n-2)/6): (((((2*n-3)/9)<(((((n-3)/12)<(((((n-3)/16)<(((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))) ? ((n-3)/16): (((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))))) ? ((n-3)/12): (((((n-3)/16)<(((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))) ? ((n-3)/16): (((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))))))) ? ((2*n-3)/9): (((((n-3)/12)<(((((n-3)/16)<(((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))) ? ((n-3)/16): (((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))))) ? ((n-3)/12): (((((n-3)/16)<(((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))) ? ((n-3)/16): (((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))))))))))); j_t += 1)
         for(k_t = (((-4*j_t-4)>(((((16*j_t-n+3)/4)>(((-n+3)/8))) ? ((16*j_t-n+3)/4): (((-n+3)/8))))) ? (-4*j_t-4): (((((16*j_t-n+3)/4)>(((-n+3)/8))) ? ((16*j_t-n+3)/4): (((-n+3)/8))))); k_t <= (((4*j_t+3)<(((((48*j_t+n+43)/20)<(((((-16*j_t+n-3)/4)<(((n-3)/8))) ? ((-16*j_t+n-3)/4): (((n-3)/8))))) ? ((48*j_t+n+43)/20): (((((-16*j_t+n-3)/4)<(((n-3)/8))) ? ((-16*j_t+n-3)/4): (((n-3)/8))))))) ? (4*j_t+3): (((((48*j_t+n+43)/20)<(((((-16*j_t+n-3)/4)<(((n-3)/8))) ? ((-16*j_t+n-3)/4): (((n-3)/8))))) ? ((48*j_t+n+43)/20): (((((-16*j_t+n-3)/4)<(((n-3)/8))) ? ((-16*j_t+n-3)/4): (((n-3)/8))))))); k_t += 1)
            for(j_l = (((96*j_t+8)>((((128*j_t+8*k_t+8)>((((160*j_t-2*n+14)>((((-24*k_t-13)>((40*k_t+8))) ? (-24*k_t-13): ((40*k_t+8))))) ? (160*j_t-2*n+14): ((((-24*k_t-13)>((40*k_t+8))) ? (-24*k_t-13): ((40*k_t+8))))))) ? (128*j_t+8*k_t+8): ((((160*j_t-2*n+14)>((((-24*k_t-13)>((40*k_t+8))) ? (-24*k_t-13): ((40*k_t+8))))) ? (160*j_t-2*n+14): ((((-24*k_t-13)>((40*k_t+8))) ? (-24*k_t-13): ((40*k_t+8))))))))) ? (96*j_t+8): ((((128*j_t+8*k_t+8)>((((160*j_t-2*n+14)>((((-24*k_t-13)>((40*k_t+8))) ? (-24*k_t-13): ((40*k_t+8))))) ? (160*j_t-2*n+14): ((((-24*k_t-13)>((40*k_t+8))) ? (-24*k_t-13): ((40*k_t+8))))))) ? (128*j_t+8*k_t+8): ((((160*j_t-2*n+14)>((((-24*k_t-13)>((40*k_t+8))) ? (-24*k_t-13): ((40*k_t+8))))) ? (160*j_t-2*n+14): ((((-24*k_t-13)>((40*k_t+8))) ? (-24*k_t-13): ((40*k_t+8))))))))); j_l <= (((128*j_t+8*k_t+139)<((((96*j_t+2*n+95)<((((40*k_t+8*n+19)<((((-24*k_t+8*n-16)<((8*n-16))) ? (-24*k_t+8*n-16): ((8*n-16))))) ? (40*k_t+8*n+19): ((((-24*k_t+8*n-16)<((8*n-16))) ? (-24*k_t+8*n-16): ((8*n-16))))))) ? (96*j_t+2*n+95): ((((40*k_t+8*n+19)<((((-24*k_t+8*n-16)<((8*n-16))) ? (-24*k_t+8*n-16): ((8*n-16))))) ? (40*k_t+8*n+19): ((((-24*k_t+8*n-16)<((8*n-16))) ? (-24*k_t+8*n-16): ((8*n-16))))))))) ? (128*j_t+8*k_t+139): ((((96*j_t+2*n+95)<((((40*k_t+8*n+19)<((((-24*k_t+8*n-16)<((8*n-16))) ? (-24*k_t+8*n-16): ((8*n-16))))) ? (40*k_t+8*n+19): ((((-24*k_t+8*n-16)<((8*n-16))) ? (-24*k_t+8*n-16): ((8*n-16))))))) ? (96*j_t+2*n+95): ((((40*k_t+8*n+19)<((((-24*k_t+8*n-16)<((8*n-16))) ? (-24*k_t+8*n-16): ((8*n-16))))) ? (40*k_t+8*n+19): ((((-24*k_t+8*n-16)<((8*n-16))) ? (-24*k_t+8*n-16): ((8*n-16))))))))); j_l += 1)
               for(k_l = ((((-j_l+32*j_t+3)/2)>(((((-2*j_l+5)/5)>(((((-3*j_l-8*k_t)/8)>(((-j_l-n+4)/3))) ? ((-3*j_l-8*k_t)/8): (((-j_l-n+4)/3))))) ? ((-2*j_l+5)/5): (((((-3*j_l-8*k_t)/8)>(((-j_l-n+4)/3))) ? ((-3*j_l-8*k_t)/8): (((-j_l-n+4)/3))))))) ? ((-j_l+32*j_t+3)/2): (((((-2*j_l+5)/5)>(((((-3*j_l-8*k_t)/8)>(((-j_l-n+4)/3))) ? ((-3*j_l-8*k_t)/8): (((-j_l-n+4)/3))))) ? ((-2*j_l+5)/5): (((((-3*j_l-8*k_t)/8)>(((-j_l-n+4)/3))) ? ((-3*j_l-8*k_t)/8): (((-j_l-n+4)/3))))))); k_l <= ((((-j_l+32*j_t+33)/2)<(((((-j_l-1)/3)<(((((-3*j_l-8*k_t)/8)<(((-2*j_l+n-2)/5))) ? ((-3*j_l-8*k_t)/8): (((-2*j_l+n-2)/5))))) ? ((-j_l-1)/3): (((((-3*j_l-8*k_t)/8)<(((-2*j_l+n-2)/5))) ? ((-3*j_l-8*k_t)/8): (((-2*j_l+n-2)/5))))))) ? ((-j_l+32*j_t+33)/2): (((((-j_l-1)/3)<(((((-3*j_l-8*k_t)/8)<(((-2*j_l+n-2)/5))) ? ((-3*j_l-8*k_t)/8): (((-2*j_l+n-2)/5))))) ? ((-j_l-1)/3): (((((-3*j_l-8*k_t)/8)<(((-2*j_l+n-2)/5))) ? ((-3*j_l-8*k_t)/8): (((-2*j_l+n-2)/5))))))); k_l += 1)
                  B[i][-j_l-3*k_l][2*j_l+5*k_l] = 0.125*(A[i+1][-j_l-3*k_l][2*j_l+5*k_l]-2.0*A[i][-j_l-3*k_l][2*j_l+5*k_l]+A[i-1][-j_l-3*k_l][2*j_l+5*k_l])+0.125*(A[i][-j_l-3*k_l+1][2*j_l+5*k_l]-2.0*A[i][-j_l-3*k_l][2*j_l+5*k_l]+A[i][-j_l-3*k_l-1][2*j_l+5*k_l])+0.125*(A[i][-j_l-3*k_l][2*j_l+5*k_l+1]-2.0*A[i][-j_l-3*k_l][2*j_l+5*k_l]+A[i][-j_l-3*k_l][2*j_l+5*k_l-1])+A[i][-j_l-3*k_l][2*j_l+5*k_l];
   polybench_timer_stop();

   polybench_timer_print();
#pragma endscop

}
void kernel_heat_3d(int tsteps, int n, double A[40+0][40+0][40+0], double B[40+0][40+0][40+0])
{
   int t, i, j, k;
   //PIPS generated variable
   int j_t, k_t, j_l, k_l;

#pragma scop
   polybench_timer_start();

   for(i = 1; i <= n-1-1; i += 1)
loop_1:
      for(j_t = 0; j_t <= ((((3*n+19)/16)<(((((n-2)/6)<(((((2*n-3)/9)<(((((n-3)/12)<(((((n-3)/16)<(((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))) ? ((n-3)/16): (((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))))) ? ((n-3)/12): (((((n-3)/16)<(((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))) ? ((n-3)/16): (((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))))))) ? ((2*n-3)/9): (((((n-3)/12)<(((((n-3)/16)<(((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))) ? ((n-3)/16): (((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))))) ? ((n-3)/12): (((((n-3)/16)<(((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))) ? ((n-3)/16): (((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))))))))) ? ((n-2)/6): (((((2*n-3)/9)<(((((n-3)/12)<(((((n-3)/16)<(((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))) ? ((n-3)/16): (((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))))) ? ((n-3)/12): (((((n-3)/16)<(((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))) ? ((n-3)/16): (((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))))))) ? ((2*n-3)/9): (((((n-3)/12)<(((((n-3)/16)<(((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))) ? ((n-3)/16): (((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))))) ? ((n-3)/12): (((((n-3)/16)<(((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))) ? ((n-3)/16): (((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))))))))))) ? ((3*n+19)/16): (((((n-2)/6)<(((((2*n-3)/9)<(((((n-3)/12)<(((((n-3)/16)<(((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))) ? ((n-3)/16): (((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))))) ? ((n-3)/12): (((((n-3)/16)<(((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))) ? ((n-3)/16): (((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))))))) ? ((2*n-3)/9): (((((n-3)/12)<(((((n-3)/16)<(((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))) ? ((n-3)/16): (((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))))) ? ((n-3)/12): (((((n-3)/16)<(((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))) ? ((n-3)/16): (((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))))))))) ? ((n-2)/6): (((((2*n-3)/9)<(((((n-3)/12)<(((((n-3)/16)<(((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))) ? ((n-3)/16): (((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))))) ? ((n-3)/12): (((((n-3)/16)<(((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))) ? ((n-3)/16): (((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))))))) ? ((2*n-3)/9): (((((n-3)/12)<(((((n-3)/16)<(((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))) ? ((n-3)/16): (((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))))) ? ((n-3)/12): (((((n-3)/16)<(((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))) ? ((n-3)/16): (((((13*n-18)/160)<(((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))) ? ((13*n-18)/160): (((((9*n-19)/80)<(((37*n-63)/544))) ? ((9*n-19)/80): (((37*n-63)/544))))))))))))))); j_t += 1)
         for(k_t = (((-4*j_t-4)>(((((16*j_t-n+3)/4)>(((-n+3)/8))) ? ((16*j_t-n+3)/4): (((-n+3)/8))))) ? (-4*j_t-4): (((((16*j_t-n+3)/4)>(((-n+3)/8))) ? ((16*j_t-n+3)/4): (((-n+3)/8))))); k_t <= (((4*j_t+3)<(((((48*j_t+n+43)/20)<(((((-16*j_t+n-3)/4)<(((n-3)/8))) ? ((-16*j_t+n-3)/4): (((n-3)/8))))) ? ((48*j_t+n+43)/20): (((((-16*j_t+n-3)/4)<(((n-3)/8))) ? ((-16*j_t+n-3)/4): (((n-3)/8))))))) ? (4*j_t+3): (((((48*j_t+n+43)/20)<(((((-16*j_t+n-3)/4)<(((n-3)/8))) ? ((-16*j_t+n-3)/4): (((n-3)/8))))) ? ((48*j_t+n+43)/20): (((((-16*j_t+n-3)/4)<(((n-3)/8))) ? ((-16*j_t+n-3)/4): (((n-3)/8))))))); k_t += 1)
            for(j_l = (((96*j_t+8)>((((128*j_t+8*k_t+8)>((((160*j_t-2*n+14)>((((-24*k_t-13)>((40*k_t+8))) ? (-24*k_t-13): ((40*k_t+8))))) ? (160*j_t-2*n+14): ((((-24*k_t-13)>((40*k_t+8))) ? (-24*k_t-13): ((40*k_t+8))))))) ? (128*j_t+8*k_t+8): ((((160*j_t-2*n+14)>((((-24*k_t-13)>((40*k_t+8))) ? (-24*k_t-13): ((40*k_t+8))))) ? (160*j_t-2*n+14): ((((-24*k_t-13)>((40*k_t+8))) ? (-24*k_t-13): ((40*k_t+8))))))))) ? (96*j_t+8): ((((128*j_t+8*k_t+8)>((((160*j_t-2*n+14)>((((-24*k_t-13)>((40*k_t+8))) ? (-24*k_t-13): ((40*k_t+8))))) ? (160*j_t-2*n+14): ((((-24*k_t-13)>((40*k_t+8))) ? (-24*k_t-13): ((40*k_t+8))))))) ? (128*j_t+8*k_t+8): ((((160*j_t-2*n+14)>((((-24*k_t-13)>((40*k_t+8))) ? (-24*k_t-13): ((40*k_t+8))))) ? (160*j_t-2*n+14): ((((-24*k_t-13)>((40*k_t+8))) ? (-24*k_t-13): ((40*k_t+8))))))))); j_l <= (((128*j_t+8*k_t+139)<((((96*j_t+2*n+95)<((((40*k_t+8*n+19)<((((-24*k_t+8*n-16)<((8*n-16))) ? (-24*k_t+8*n-16): ((8*n-16))))) ? (40*k_t+8*n+19): ((((-24*k_t+8*n-16)<((8*n-16))) ? (-24*k_t+8*n-16): ((8*n-16))))))) ? (96*j_t+2*n+95): ((((40*k_t+8*n+19)<((((-24*k_t+8*n-16)<((8*n-16))) ? (-24*k_t+8*n-16): ((8*n-16))))) ? (40*k_t+8*n+19): ((((-24*k_t+8*n-16)<((8*n-16))) ? (-24*k_t+8*n-16): ((8*n-16))))))))) ? (128*j_t+8*k_t+139): ((((96*j_t+2*n+95)<((((40*k_t+8*n+19)<((((-24*k_t+8*n-16)<((8*n-16))) ? (-24*k_t+8*n-16): ((8*n-16))))) ? (40*k_t+8*n+19): ((((-24*k_t+8*n-16)<((8*n-16))) ? (-24*k_t+8*n-16): ((8*n-16))))))) ? (96*j_t+2*n+95): ((((40*k_t+8*n+19)<((((-24*k_t+8*n-16)<((8*n-16))) ? (-24*k_t+8*n-16): ((8*n-16))))) ? (40*k_t+8*n+19): ((((-24*k_t+8*n-16)<((8*n-16))) ? (-24*k_t+8*n-16): ((8*n-16))))))))); j_l += 1)
               for(k_l = ((((-j_l+32*j_t+3)/2)>(((((-2*j_l+5)/5)>(((((-3*j_l-8*k_t)/8)>(((-j_l-n+4)/3))) ? ((-3*j_l-8*k_t)/8): (((-j_l-n+4)/3))))) ? ((-2*j_l+5)/5): (((((-3*j_l-8*k_t)/8)>(((-j_l-n+4)/3))) ? ((-3*j_l-8*k_t)/8): (((-j_l-n+4)/3))))))) ? ((-j_l+32*j_t+3)/2): (((((-2*j_l+5)/5)>(((((-3*j_l-8*k_t)/8)>(((-j_l-n+4)/3))) ? ((-3*j_l-8*k_t)/8): (((-j_l-n+4)/3))))) ? ((-2*j_l+5)/5): (((((-3*j_l-8*k_t)/8)>(((-j_l-n+4)/3))) ? ((-3*j_l-8*k_t)/8): (((-j_l-n+4)/3))))))); k_l <= ((((-j_l+32*j_t+33)/2)<(((((-j_l-1)/3)<(((((-3*j_l-8*k_t)/8)<(((-2*j_l+n-2)/5))) ? ((-3*j_l-8*k_t)/8): (((-2*j_l+n-2)/5))))) ? ((-j_l-1)/3): (((((-3*j_l-8*k_t)/8)<(((-2*j_l+n-2)/5))) ? ((-3*j_l-8*k_t)/8): (((-2*j_l+n-2)/5))))))) ? ((-j_l+32*j_t+33)/2): (((((-j_l-1)/3)<(((((-3*j_l-8*k_t)/8)<(((-2*j_l+n-2)/5))) ? ((-3*j_l-8*k_t)/8): (((-2*j_l+n-2)/5))))) ? ((-j_l-1)/3): (((((-3*j_l-8*k_t)/8)<(((-2*j_l+n-2)/5))) ? ((-3*j_l-8*k_t)/8): (((-2*j_l+n-2)/5))))))); k_l += 1)
                  B[i][-j_l-3*k_l][2*j_l+5*k_l] = 0.125*(A[i+1][-j_l-3*k_l][2*j_l+5*k_l]-2.0*A[i][-j_l-3*k_l][2*j_l+5*k_l]+A[i-1][-j_l-3*k_l][2*j_l+5*k_l])+0.125*(A[i][-j_l-3*k_l+1][2*j_l+5*k_l]-2.0*A[i][-j_l-3*k_l][2*j_l+5*k_l]+A[i][-j_l-3*k_l-1][2*j_l+5*k_l])+0.125*(A[i][-j_l-3*k_l][2*j_l+5*k_l+1]-2.0*A[i][-j_l-3*k_l][2*j_l+5*k_l]+A[i][-j_l-3*k_l][2*j_l+5*k_l-1])+A[i][-j_l-3*k_l][2*j_l+5*k_l];
   polybench_timer_stop();

   polybench_timer_print();
#pragma endscop

}
