GENERATED TILE DIRECTION=TI - LOCAL TILE DIRECTION=LI
void kernel_heat_3d(int tsteps, int n, double A[10+0][10+0][10+0], double B[10+0][10+0][10+0])
{
   int t, i, j, k;
   //PIPS generated variable
   int j_t, k_t, j_l, k_l;

#pragma scop
   polybench_timer_start();

   for(i = 1; i <= n-1-1; i += 1)
loop_1:
      for(j_t = 0; j_t <= ((((3*n+21)/8)<(((n-3)/4))) ? ((3*n+21)/8): (((n-3)/4))); j_t += 1)
         for(k_t = ((((-j_t-1)/4)>(((((4*j_t-n+3)/16)>(((-n+3)/32))) ? ((4*j_t-n+3)/16): (((-n+3)/32))))) ? ((-j_t-1)/4): (((((4*j_t-n+3)/16)>(((-n+3)/32))) ? ((4*j_t-n+3)/16): (((-n+3)/32))))); k_t <= (((j_t/4)<(((-4*j_t+n-3)/16))) ? (j_t/4): (((-4*j_t+n-3)/16))); k_t += 1)
            for(j_l = (((1)>((((4*j_t+16*k_t+1)>((8*j_t-n+4))) ? (4*j_t+16*k_t+1): ((8*j_t-n+4))))) ? (1): ((((4*j_t+16*k_t+1)>((8*j_t-n+4))) ? (4*j_t+16*k_t+1): ((8*j_t-n+4))))); j_l <= (((8*j_t+8)<((((4*j_t+16*k_t+20)<((((32*k_t+n+29)<((n-2))) ? (32*k_t+n+29): ((n-2))))) ? (4*j_t+16*k_t+20): ((((32*k_t+n+29)<((n-2))) ? (32*k_t+n+29): ((n-2))))))) ? (8*j_t+8): ((((4*j_t+16*k_t+20)<((((32*k_t+n+29)<((n-2))) ? (32*k_t+n+29): ((n-2))))) ? (4*j_t+16*k_t+20): ((((32*k_t+n+29)<((n-2))) ? (32*k_t+n+29): ((n-2))))))); j_l += 1)
               for(k_l = (((-j_l+8*j_t+2)>((((j_l-32*k_t-31)>((1))) ? (j_l-32*k_t-31): ((1))))) ? (-j_l+8*j_t+2): ((((j_l-32*k_t-31)>((1))) ? (j_l-32*k_t-31): ((1))))); k_l <= (((-j_l+8*j_t+9)<((((j_l-32*k_t)<((n-2))) ? (j_l-32*k_t): ((n-2))))) ? (-j_l+8*j_t+9): ((((j_l-32*k_t)<((n-2))) ? (j_l-32*k_t): ((n-2))))); k_l += 1)
                  B[i][j_l][k_l] = 0.125*(A[i+1][j_l][k_l]-2.0*A[i][j_l][k_l]+A[i-1][j_l][k_l])+0.125*(A[i][j_l+1][k_l]-2.0*A[i][j_l][k_l]+A[i][j_l-1][k_l])+0.125*(A[i][j_l][k_l+1]-2.0*A[i][j_l][k_l]+A[i][j_l][k_l-1])+A[i][j_l][k_l];
   polybench_timer_stop();

   polybench_timer_print();
#pragma endscop

}
void kernel_heat_3d(int tsteps, int n, double A[10+0][10+0][10+0], double B[10+0][10+0][10+0])
{
   int t, i, j, k;
   //PIPS generated variable
   int j_t, k_t, j_l, k_l;

#pragma scop
   polybench_timer_start();

   for(i = 1; i <= n-1-1; i += 1)
loop_1:
      for(j_t = 0; j_t <= ((((3*n+21)/8)<(((n-3)/4))) ? ((3*n+21)/8): (((n-3)/4))); j_t += 1)
         for(k_t = ((((-j_t-1)/4)>(((((4*j_t-n+3)/16)>(((-n+3)/32))) ? ((4*j_t-n+3)/16): (((-n+3)/32))))) ? ((-j_t-1)/4): (((((4*j_t-n+3)/16)>(((-n+3)/32))) ? ((4*j_t-n+3)/16): (((-n+3)/32))))); k_t <= (((j_t/4)<(((-4*j_t+n-3)/16))) ? (j_t/4): (((-4*j_t+n-3)/16))); k_t += 1)
            for(j_l = (((1)>((((4*j_t+16*k_t+1)>((8*j_t-n+4))) ? (4*j_t+16*k_t+1): ((8*j_t-n+4))))) ? (1): ((((4*j_t+16*k_t+1)>((8*j_t-n+4))) ? (4*j_t+16*k_t+1): ((8*j_t-n+4))))); j_l <= (((8*j_t+8)<((((4*j_t+16*k_t+20)<((((32*k_t+n+29)<((n-2))) ? (32*k_t+n+29): ((n-2))))) ? (4*j_t+16*k_t+20): ((((32*k_t+n+29)<((n-2))) ? (32*k_t+n+29): ((n-2))))))) ? (8*j_t+8): ((((4*j_t+16*k_t+20)<((((32*k_t+n+29)<((n-2))) ? (32*k_t+n+29): ((n-2))))) ? (4*j_t+16*k_t+20): ((((32*k_t+n+29)<((n-2))) ? (32*k_t+n+29): ((n-2))))))); j_l += 1)
               for(k_l = (((-j_l+8*j_t+2)>((((j_l-32*k_t-31)>((1))) ? (j_l-32*k_t-31): ((1))))) ? (-j_l+8*j_t+2): ((((j_l-32*k_t-31)>((1))) ? (j_l-32*k_t-31): ((1))))); k_l <= (((-j_l+8*j_t+9)<((((j_l-32*k_t)<((n-2))) ? (j_l-32*k_t): ((n-2))))) ? (-j_l+8*j_t+9): ((((j_l-32*k_t)<((n-2))) ? (j_l-32*k_t): ((n-2))))); k_l += 1)
                  B[i][j_l][k_l] = 0.125*(A[i+1][j_l][k_l]-2.0*A[i][j_l][k_l]+A[i-1][j_l][k_l])+0.125*(A[i][j_l+1][k_l]-2.0*A[i][j_l][k_l]+A[i][j_l-1][k_l])+0.125*(A[i][j_l][k_l+1]-2.0*A[i][j_l][k_l]+A[i][j_l][k_l-1])+A[i][j_l][k_l];
   polybench_timer_stop();

   polybench_timer_print();
#pragma endscop

}
