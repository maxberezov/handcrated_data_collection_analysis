GENERATED TILE DIRECTION=TP - LOCAL TILE DIRECTION=LP
void kernel_heat_3d(int tsteps, int n, double A[120+0][120+0][120+0], double B[120+0][120+0][120+0])
{
   int t, i, j, k;
   //PIPS generated variable
   int j_t, k_t, j_l, k_l;

#pragma scop
   polybench_timer_start();

   for(i = 1; i <= n-1-1; i += 1)
loop_1:
      for(j_t = ((((-n+3)/32)>(((((-n+3)/16)>(((-3*n+9)/16))) ? ((-n+3)/16): (((-3*n+9)/16))))) ? ((-n+3)/32): (((((-n+3)/16)>(((-3*n+9)/16))) ? ((-n+3)/16): (((-3*n+9)/16))))); j_t <= ((((n-3)/8)<(((((7*n-21)/32)<(((((9*n-27)/32)<(((((11*n-33)/32)<(((((13*n-39)/32)<(((15*n-45)/32))) ? ((13*n-39)/32): (((15*n-45)/32))))) ? ((11*n-33)/32): (((((13*n-39)/32)<(((15*n-45)/32))) ? ((13*n-39)/32): (((15*n-45)/32))))))) ? ((9*n-27)/32): (((((11*n-33)/32)<(((((13*n-39)/32)<(((15*n-45)/32))) ? ((13*n-39)/32): (((15*n-45)/32))))) ? ((11*n-33)/32): (((((13*n-39)/32)<(((15*n-45)/32))) ? ((13*n-39)/32): (((15*n-45)/32))))))))) ? ((7*n-21)/32): (((((9*n-27)/32)<(((((11*n-33)/32)<(((((13*n-39)/32)<(((15*n-45)/32))) ? ((13*n-39)/32): (((15*n-45)/32))))) ? ((11*n-33)/32): (((((13*n-39)/32)<(((15*n-45)/32))) ? ((13*n-39)/32): (((15*n-45)/32))))))) ? ((9*n-27)/32): (((((11*n-33)/32)<(((((13*n-39)/32)<(((15*n-45)/32))) ? ((13*n-39)/32): (((15*n-45)/32))))) ? ((11*n-33)/32): (((((13*n-39)/32)<(((15*n-45)/32))) ? ((13*n-39)/32): (((15*n-45)/32))))))))))) ? ((n-3)/8): (((((7*n-21)/32)<(((((9*n-27)/32)<(((((11*n-33)/32)<(((((13*n-39)/32)<(((15*n-45)/32))) ? ((13*n-39)/32): (((15*n-45)/32))))) ? ((11*n-33)/32): (((((13*n-39)/32)<(((15*n-45)/32))) ? ((13*n-39)/32): (((15*n-45)/32))))))) ? ((9*n-27)/32): (((((11*n-33)/32)<(((((13*n-39)/32)<(((15*n-45)/32))) ? ((13*n-39)/32): (((15*n-45)/32))))) ? ((11*n-33)/32): (((((13*n-39)/32)<(((15*n-45)/32))) ? ((13*n-39)/32): (((15*n-45)/32))))))))) ? ((7*n-21)/32): (((((9*n-27)/32)<(((((11*n-33)/32)<(((((13*n-39)/32)<(((15*n-45)/32))) ? ((13*n-39)/32): (((15*n-45)/32))))) ? ((11*n-33)/32): (((((13*n-39)/32)<(((15*n-45)/32))) ? ((13*n-39)/32): (((15*n-45)/32))))))) ? ((9*n-27)/32): (((((11*n-33)/32)<(((((13*n-39)/32)<(((15*n-45)/32))) ? ((13*n-39)/32): (((15*n-45)/32))))) ? ((11*n-33)/32): (((((13*n-39)/32)<(((15*n-45)/32))) ? ((13*n-39)/32): (((15*n-45)/32))))))))))); j_t += 1)
         for(k_t = (((-2*j_t-2)>(((((-64*j_t-n-27)/48)>(((((-48*j_t-n-12)/40)>(((((-32*j_t-n+3)/32)>(((((-16*j_t-n+11)/24)>(((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))) ? ((-16*j_t-n+11)/24): (((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))))) ? ((-32*j_t-n+3)/32): (((((-16*j_t-n+11)/24)>(((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))) ? ((-16*j_t-n+11)/24): (((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))))))) ? ((-48*j_t-n-12)/40): (((((-32*j_t-n+3)/32)>(((((-16*j_t-n+11)/24)>(((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))) ? ((-16*j_t-n+11)/24): (((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))))) ? ((-32*j_t-n+3)/32): (((((-16*j_t-n+11)/24)>(((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))) ? ((-16*j_t-n+11)/24): (((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))))))))) ? ((-64*j_t-n-27)/48): (((((-48*j_t-n-12)/40)>(((((-32*j_t-n+3)/32)>(((((-16*j_t-n+11)/24)>(((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))) ? ((-16*j_t-n+11)/24): (((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))))) ? ((-32*j_t-n+3)/32): (((((-16*j_t-n+11)/24)>(((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))) ? ((-16*j_t-n+11)/24): (((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))))))) ? ((-48*j_t-n-12)/40): (((((-32*j_t-n+3)/32)>(((((-16*j_t-n+11)/24)>(((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))) ? ((-16*j_t-n+11)/24): (((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))))) ? ((-32*j_t-n+3)/32): (((((-16*j_t-n+11)/24)>(((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))) ? ((-16*j_t-n+11)/24): (((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))))))))))) ? (-2*j_t-2): (((((-64*j_t-n-27)/48)>(((((-48*j_t-n-12)/40)>(((((-32*j_t-n+3)/32)>(((((-16*j_t-n+11)/24)>(((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))) ? ((-16*j_t-n+11)/24): (((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))))) ? ((-32*j_t-n+3)/32): (((((-16*j_t-n+11)/24)>(((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))) ? ((-16*j_t-n+11)/24): (((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))))))) ? ((-48*j_t-n-12)/40): (((((-32*j_t-n+3)/32)>(((((-16*j_t-n+11)/24)>(((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))) ? ((-16*j_t-n+11)/24): (((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))))) ? ((-32*j_t-n+3)/32): (((((-16*j_t-n+11)/24)>(((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))) ? ((-16*j_t-n+11)/24): (((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))))))))) ? ((-64*j_t-n-27)/48): (((((-48*j_t-n-12)/40)>(((((-32*j_t-n+3)/32)>(((((-16*j_t-n+11)/24)>(((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))) ? ((-16*j_t-n+11)/24): (((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))))) ? ((-32*j_t-n+3)/32): (((((-16*j_t-n+11)/24)>(((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))) ? ((-16*j_t-n+11)/24): (((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))))))) ? ((-48*j_t-n-12)/40): (((((-32*j_t-n+3)/32)>(((((-16*j_t-n+11)/24)>(((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))) ? ((-16*j_t-n+11)/24): (((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))))) ? ((-32*j_t-n+3)/32): (((((-16*j_t-n+11)/24)>(((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))) ? ((-16*j_t-n+11)/24): (((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))))))))))); k_t <= (((-2*j_t/3)<(((((-16*j_t+n-3)/8)<(((((-32*j_t+n-3)/32)<(((-64*j_t+3*n-9)/48))) ? ((-32*j_t+n-3)/32): (((-64*j_t+3*n-9)/48))))) ? ((-16*j_t+n-3)/8): (((((-32*j_t+n-3)/32)<(((-64*j_t+3*n-9)/48))) ? ((-32*j_t+n-3)/32): (((-64*j_t+3*n-9)/48))))))) ? (-2*j_t/3): (((((-16*j_t+n-3)/8)<(((((-32*j_t+n-3)/32)<(((-64*j_t+3*n-9)/48))) ? ((-32*j_t+n-3)/32): (((-64*j_t+3*n-9)/48))))) ? ((-16*j_t+n-3)/8): (((((-32*j_t+n-3)/32)<(((-64*j_t+3*n-9)/48))) ? ((-32*j_t+n-3)/32): (((-64*j_t+3*n-9)/48))))))); k_t += 1)
            for(j_l = (((32*j_t+32*k_t+2)>((((64*j_t+48*k_t+2)>((((16*k_t-13)>((((-48*k_t-4*n+14)>((-n+5))) ? (-48*k_t-4*n+14): ((-n+5))))) ? (16*k_t-13): ((((-48*k_t-4*n+14)>((-n+5))) ? (-48*k_t-4*n+14): ((-n+5))))))) ? (64*j_t+48*k_t+2): ((((16*k_t-13)>((((-48*k_t-4*n+14)>((-n+5))) ? (-48*k_t-4*n+14): ((-n+5))))) ? (16*k_t-13): ((((-48*k_t-4*n+14)>((-n+5))) ? (-48*k_t-4*n+14): ((-n+5))))))))) ? (32*j_t+32*k_t+2): ((((64*j_t+48*k_t+2)>((((16*k_t-13)>((((-48*k_t-4*n+14)>((-n+5))) ? (-48*k_t-4*n+14): ((-n+5))))) ? (16*k_t-13): ((((-48*k_t-4*n+14)>((-n+5))) ? (-48*k_t-4*n+14): ((-n+5))))))) ? (64*j_t+48*k_t+2): ((((16*k_t-13)>((((-48*k_t-4*n+14)>((-n+5))) ? (-48*k_t-4*n+14): ((-n+5))))) ? (16*k_t-13): ((((-48*k_t-4*n+14)>((-n+5))) ? (-48*k_t-4*n+14): ((-n+5))))))))); j_l <= (((64*j_t+48*k_t+79)<((((96*j_t+96*k_t+2*n+89)<((((32*j_t+32*k_t+2*n+27)<((((-48*k_t+47)<((((16*k_t+4*n-10)<((3*n-7))) ? (16*k_t+4*n-10): ((3*n-7))))) ? (-48*k_t+47): ((((16*k_t+4*n-10)<((3*n-7))) ? (16*k_t+4*n-10): ((3*n-7))))))) ? (32*j_t+32*k_t+2*n+27): ((((-48*k_t+47)<((((16*k_t+4*n-10)<((3*n-7))) ? (16*k_t+4*n-10): ((3*n-7))))) ? (-48*k_t+47): ((((16*k_t+4*n-10)<((3*n-7))) ? (16*k_t+4*n-10): ((3*n-7))))))))) ? (96*j_t+96*k_t+2*n+89): ((((32*j_t+32*k_t+2*n+27)<((((-48*k_t+47)<((((16*k_t+4*n-10)<((3*n-7))) ? (16*k_t+4*n-10): ((3*n-7))))) ? (-48*k_t+47): ((((16*k_t+4*n-10)<((3*n-7))) ? (16*k_t+4*n-10): ((3*n-7))))))) ? (32*j_t+32*k_t+2*n+27): ((((-48*k_t+47)<((((16*k_t+4*n-10)<((3*n-7))) ? (16*k_t+4*n-10): ((3*n-7))))) ? (-48*k_t+47): ((((16*k_t+4*n-10)<((3*n-7))) ? (16*k_t+4*n-10): ((3*n-7))))))))))) ? (64*j_t+48*k_t+79): ((((96*j_t+96*k_t+2*n+89)<((((32*j_t+32*k_t+2*n+27)<((((-48*k_t+47)<((((16*k_t+4*n-10)<((3*n-7))) ? (16*k_t+4*n-10): ((3*n-7))))) ? (-48*k_t+47): ((((16*k_t+4*n-10)<((3*n-7))) ? (16*k_t+4*n-10): ((3*n-7))))))) ? (32*j_t+32*k_t+2*n+27): ((((-48*k_t+47)<((((16*k_t+4*n-10)<((3*n-7))) ? (16*k_t+4*n-10): ((3*n-7))))) ? (-48*k_t+47): ((((16*k_t+4*n-10)<((3*n-7))) ? (16*k_t+4*n-10): ((3*n-7))))))))) ? (96*j_t+96*k_t+2*n+89): ((((32*j_t+32*k_t+2*n+27)<((((-48*k_t+47)<((((16*k_t+4*n-10)<((3*n-7))) ? (16*k_t+4*n-10): ((3*n-7))))) ? (-48*k_t+47): ((((16*k_t+4*n-10)<((3*n-7))) ? (16*k_t+4*n-10): ((3*n-7))))))) ? (32*j_t+32*k_t+2*n+27): ((((-48*k_t+47)<((((16*k_t+4*n-10)<((3*n-7))) ? (16*k_t+4*n-10): ((3*n-7))))) ? (-48*k_t+47): ((((16*k_t+4*n-10)<((3*n-7))) ? (16*k_t+4*n-10): ((3*n-7))))))))))); j_l += 1)
               for(k_l = ((((j_l-32*j_t-32*k_t-30)/2)>(((((j_l+3)/3)>(((((j_l-16*k_t+5)/4)>((1))) ? ((j_l-16*k_t+5)/4): ((1))))) ? ((j_l+3)/3): (((((j_l-16*k_t+5)/4)>((1))) ? ((j_l-16*k_t+5)/4): ((1))))))) ? ((j_l-32*j_t-32*k_t-30)/2): (((((j_l+3)/3)>(((((j_l-16*k_t+5)/4)>((1))) ? ((j_l-16*k_t+5)/4): ((1))))) ? ((j_l+3)/3): (((((j_l-16*k_t+5)/4)>((1))) ? ((j_l-16*k_t+5)/4): ((1))))))); k_l <= ((((j_l-32*j_t-32*k_t)/2)<(((((j_l-16*k_t+17)/4)<(((((j_l+n-2)/3)<((n-2))) ? ((j_l+n-2)/3): ((n-2))))) ? ((j_l-16*k_t+17)/4): (((((j_l+n-2)/3)<((n-2))) ? ((j_l+n-2)/3): ((n-2))))))) ? ((j_l-32*j_t-32*k_t)/2): (((((j_l-16*k_t+17)/4)<(((((j_l+n-2)/3)<((n-2))) ? ((j_l+n-2)/3): ((n-2))))) ? ((j_l-16*k_t+17)/4): (((((j_l+n-2)/3)<((n-2))) ? ((j_l+n-2)/3): ((n-2))))))); k_l += 1)
                  B[i][k_l][-j_l+3*k_l] = 0.125*(A[i+1][k_l][-j_l+3*k_l]-2.0*A[i][k_l][-j_l+3*k_l]+A[i-1][k_l][-j_l+3*k_l])+0.125*(A[i][k_l+1][-j_l+3*k_l]-2.0*A[i][k_l][-j_l+3*k_l]+A[i][k_l-1][-j_l+3*k_l])+0.125*(A[i][k_l][-j_l+3*k_l+1]-2.0*A[i][k_l][-j_l+3*k_l]+A[i][k_l][-j_l+3*k_l-1])+A[i][k_l][-j_l+3*k_l];
   polybench_timer_stop();

   polybench_timer_print();
#pragma endscop

}
void kernel_heat_3d(int tsteps, int n, double A[120+0][120+0][120+0], double B[120+0][120+0][120+0])
{
   int t, i, j, k;
   //PIPS generated variable
   int j_t, k_t, j_l, k_l;

#pragma scop
   polybench_timer_start();

   for(i = 1; i <= n-1-1; i += 1)
loop_1:
      for(j_t = ((((-n+3)/32)>(((((-n+3)/16)>(((-3*n+9)/16))) ? ((-n+3)/16): (((-3*n+9)/16))))) ? ((-n+3)/32): (((((-n+3)/16)>(((-3*n+9)/16))) ? ((-n+3)/16): (((-3*n+9)/16))))); j_t <= ((((n-3)/8)<(((((7*n-21)/32)<(((((9*n-27)/32)<(((((11*n-33)/32)<(((((13*n-39)/32)<(((15*n-45)/32))) ? ((13*n-39)/32): (((15*n-45)/32))))) ? ((11*n-33)/32): (((((13*n-39)/32)<(((15*n-45)/32))) ? ((13*n-39)/32): (((15*n-45)/32))))))) ? ((9*n-27)/32): (((((11*n-33)/32)<(((((13*n-39)/32)<(((15*n-45)/32))) ? ((13*n-39)/32): (((15*n-45)/32))))) ? ((11*n-33)/32): (((((13*n-39)/32)<(((15*n-45)/32))) ? ((13*n-39)/32): (((15*n-45)/32))))))))) ? ((7*n-21)/32): (((((9*n-27)/32)<(((((11*n-33)/32)<(((((13*n-39)/32)<(((15*n-45)/32))) ? ((13*n-39)/32): (((15*n-45)/32))))) ? ((11*n-33)/32): (((((13*n-39)/32)<(((15*n-45)/32))) ? ((13*n-39)/32): (((15*n-45)/32))))))) ? ((9*n-27)/32): (((((11*n-33)/32)<(((((13*n-39)/32)<(((15*n-45)/32))) ? ((13*n-39)/32): (((15*n-45)/32))))) ? ((11*n-33)/32): (((((13*n-39)/32)<(((15*n-45)/32))) ? ((13*n-39)/32): (((15*n-45)/32))))))))))) ? ((n-3)/8): (((((7*n-21)/32)<(((((9*n-27)/32)<(((((11*n-33)/32)<(((((13*n-39)/32)<(((15*n-45)/32))) ? ((13*n-39)/32): (((15*n-45)/32))))) ? ((11*n-33)/32): (((((13*n-39)/32)<(((15*n-45)/32))) ? ((13*n-39)/32): (((15*n-45)/32))))))) ? ((9*n-27)/32): (((((11*n-33)/32)<(((((13*n-39)/32)<(((15*n-45)/32))) ? ((13*n-39)/32): (((15*n-45)/32))))) ? ((11*n-33)/32): (((((13*n-39)/32)<(((15*n-45)/32))) ? ((13*n-39)/32): (((15*n-45)/32))))))))) ? ((7*n-21)/32): (((((9*n-27)/32)<(((((11*n-33)/32)<(((((13*n-39)/32)<(((15*n-45)/32))) ? ((13*n-39)/32): (((15*n-45)/32))))) ? ((11*n-33)/32): (((((13*n-39)/32)<(((15*n-45)/32))) ? ((13*n-39)/32): (((15*n-45)/32))))))) ? ((9*n-27)/32): (((((11*n-33)/32)<(((((13*n-39)/32)<(((15*n-45)/32))) ? ((13*n-39)/32): (((15*n-45)/32))))) ? ((11*n-33)/32): (((((13*n-39)/32)<(((15*n-45)/32))) ? ((13*n-39)/32): (((15*n-45)/32))))))))))); j_t += 1)
         for(k_t = (((-2*j_t-2)>(((((-64*j_t-n-27)/48)>(((((-48*j_t-n-12)/40)>(((((-32*j_t-n+3)/32)>(((((-16*j_t-n+11)/24)>(((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))) ? ((-16*j_t-n+11)/24): (((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))))) ? ((-32*j_t-n+3)/32): (((((-16*j_t-n+11)/24)>(((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))) ? ((-16*j_t-n+11)/24): (((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))))))) ? ((-48*j_t-n-12)/40): (((((-32*j_t-n+3)/32)>(((((-16*j_t-n+11)/24)>(((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))) ? ((-16*j_t-n+11)/24): (((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))))) ? ((-32*j_t-n+3)/32): (((((-16*j_t-n+11)/24)>(((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))) ? ((-16*j_t-n+11)/24): (((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))))))))) ? ((-64*j_t-n-27)/48): (((((-48*j_t-n-12)/40)>(((((-32*j_t-n+3)/32)>(((((-16*j_t-n+11)/24)>(((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))) ? ((-16*j_t-n+11)/24): (((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))))) ? ((-32*j_t-n+3)/32): (((((-16*j_t-n+11)/24)>(((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))) ? ((-16*j_t-n+11)/24): (((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))))))) ? ((-48*j_t-n-12)/40): (((((-32*j_t-n+3)/32)>(((((-16*j_t-n+11)/24)>(((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))) ? ((-16*j_t-n+11)/24): (((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))))) ? ((-32*j_t-n+3)/32): (((((-16*j_t-n+11)/24)>(((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))) ? ((-16*j_t-n+11)/24): (((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))))))))))) ? (-2*j_t-2): (((((-64*j_t-n-27)/48)>(((((-48*j_t-n-12)/40)>(((((-32*j_t-n+3)/32)>(((((-16*j_t-n+11)/24)>(((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))) ? ((-16*j_t-n+11)/24): (((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))))) ? ((-32*j_t-n+3)/32): (((((-16*j_t-n+11)/24)>(((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))) ? ((-16*j_t-n+11)/24): (((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))))))) ? ((-48*j_t-n-12)/40): (((((-32*j_t-n+3)/32)>(((((-16*j_t-n+11)/24)>(((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))) ? ((-16*j_t-n+11)/24): (((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))))) ? ((-32*j_t-n+3)/32): (((((-16*j_t-n+11)/24)>(((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))) ? ((-16*j_t-n+11)/24): (((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))))))))) ? ((-64*j_t-n-27)/48): (((((-48*j_t-n-12)/40)>(((((-32*j_t-n+3)/32)>(((((-16*j_t-n+11)/24)>(((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))) ? ((-16*j_t-n+11)/24): (((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))))) ? ((-32*j_t-n+3)/32): (((((-16*j_t-n+11)/24)>(((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))) ? ((-16*j_t-n+11)/24): (((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))))))) ? ((-48*j_t-n-12)/40): (((((-32*j_t-n+3)/32)>(((((-16*j_t-n+11)/24)>(((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))) ? ((-16*j_t-n+11)/24): (((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))))) ? ((-32*j_t-n+3)/32): (((((-16*j_t-n+11)/24)>(((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))) ? ((-16*j_t-n+11)/24): (((((-16*j_t-3*n+33)/40)>(((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))) ? ((-16*j_t-3*n+33)/40): (((((-n+10)/8)>(((-5*n+30)/16))) ? ((-n+10)/8): (((-5*n+30)/16))))))))))))))); k_t <= (((-2*j_t/3)<(((((-16*j_t+n-3)/8)<(((((-32*j_t+n-3)/32)<(((-64*j_t+3*n-9)/48))) ? ((-32*j_t+n-3)/32): (((-64*j_t+3*n-9)/48))))) ? ((-16*j_t+n-3)/8): (((((-32*j_t+n-3)/32)<(((-64*j_t+3*n-9)/48))) ? ((-32*j_t+n-3)/32): (((-64*j_t+3*n-9)/48))))))) ? (-2*j_t/3): (((((-16*j_t+n-3)/8)<(((((-32*j_t+n-3)/32)<(((-64*j_t+3*n-9)/48))) ? ((-32*j_t+n-3)/32): (((-64*j_t+3*n-9)/48))))) ? ((-16*j_t+n-3)/8): (((((-32*j_t+n-3)/32)<(((-64*j_t+3*n-9)/48))) ? ((-32*j_t+n-3)/32): (((-64*j_t+3*n-9)/48))))))); k_t += 1)
            for(j_l = (((32*j_t+32*k_t+2)>((((64*j_t+48*k_t+2)>((((16*k_t-13)>((((-48*k_t-4*n+14)>((-n+5))) ? (-48*k_t-4*n+14): ((-n+5))))) ? (16*k_t-13): ((((-48*k_t-4*n+14)>((-n+5))) ? (-48*k_t-4*n+14): ((-n+5))))))) ? (64*j_t+48*k_t+2): ((((16*k_t-13)>((((-48*k_t-4*n+14)>((-n+5))) ? (-48*k_t-4*n+14): ((-n+5))))) ? (16*k_t-13): ((((-48*k_t-4*n+14)>((-n+5))) ? (-48*k_t-4*n+14): ((-n+5))))))))) ? (32*j_t+32*k_t+2): ((((64*j_t+48*k_t+2)>((((16*k_t-13)>((((-48*k_t-4*n+14)>((-n+5))) ? (-48*k_t-4*n+14): ((-n+5))))) ? (16*k_t-13): ((((-48*k_t-4*n+14)>((-n+5))) ? (-48*k_t-4*n+14): ((-n+5))))))) ? (64*j_t+48*k_t+2): ((((16*k_t-13)>((((-48*k_t-4*n+14)>((-n+5))) ? (-48*k_t-4*n+14): ((-n+5))))) ? (16*k_t-13): ((((-48*k_t-4*n+14)>((-n+5))) ? (-48*k_t-4*n+14): ((-n+5))))))))); j_l <= (((64*j_t+48*k_t+79)<((((96*j_t+96*k_t+2*n+89)<((((32*j_t+32*k_t+2*n+27)<((((-48*k_t+47)<((((16*k_t+4*n-10)<((3*n-7))) ? (16*k_t+4*n-10): ((3*n-7))))) ? (-48*k_t+47): ((((16*k_t+4*n-10)<((3*n-7))) ? (16*k_t+4*n-10): ((3*n-7))))))) ? (32*j_t+32*k_t+2*n+27): ((((-48*k_t+47)<((((16*k_t+4*n-10)<((3*n-7))) ? (16*k_t+4*n-10): ((3*n-7))))) ? (-48*k_t+47): ((((16*k_t+4*n-10)<((3*n-7))) ? (16*k_t+4*n-10): ((3*n-7))))))))) ? (96*j_t+96*k_t+2*n+89): ((((32*j_t+32*k_t+2*n+27)<((((-48*k_t+47)<((((16*k_t+4*n-10)<((3*n-7))) ? (16*k_t+4*n-10): ((3*n-7))))) ? (-48*k_t+47): ((((16*k_t+4*n-10)<((3*n-7))) ? (16*k_t+4*n-10): ((3*n-7))))))) ? (32*j_t+32*k_t+2*n+27): ((((-48*k_t+47)<((((16*k_t+4*n-10)<((3*n-7))) ? (16*k_t+4*n-10): ((3*n-7))))) ? (-48*k_t+47): ((((16*k_t+4*n-10)<((3*n-7))) ? (16*k_t+4*n-10): ((3*n-7))))))))))) ? (64*j_t+48*k_t+79): ((((96*j_t+96*k_t+2*n+89)<((((32*j_t+32*k_t+2*n+27)<((((-48*k_t+47)<((((16*k_t+4*n-10)<((3*n-7))) ? (16*k_t+4*n-10): ((3*n-7))))) ? (-48*k_t+47): ((((16*k_t+4*n-10)<((3*n-7))) ? (16*k_t+4*n-10): ((3*n-7))))))) ? (32*j_t+32*k_t+2*n+27): ((((-48*k_t+47)<((((16*k_t+4*n-10)<((3*n-7))) ? (16*k_t+4*n-10): ((3*n-7))))) ? (-48*k_t+47): ((((16*k_t+4*n-10)<((3*n-7))) ? (16*k_t+4*n-10): ((3*n-7))))))))) ? (96*j_t+96*k_t+2*n+89): ((((32*j_t+32*k_t+2*n+27)<((((-48*k_t+47)<((((16*k_t+4*n-10)<((3*n-7))) ? (16*k_t+4*n-10): ((3*n-7))))) ? (-48*k_t+47): ((((16*k_t+4*n-10)<((3*n-7))) ? (16*k_t+4*n-10): ((3*n-7))))))) ? (32*j_t+32*k_t+2*n+27): ((((-48*k_t+47)<((((16*k_t+4*n-10)<((3*n-7))) ? (16*k_t+4*n-10): ((3*n-7))))) ? (-48*k_t+47): ((((16*k_t+4*n-10)<((3*n-7))) ? (16*k_t+4*n-10): ((3*n-7))))))))))); j_l += 1)
               for(k_l = ((((j_l-32*j_t-32*k_t-30)/2)>(((((j_l+3)/3)>(((((j_l-16*k_t+5)/4)>((1))) ? ((j_l-16*k_t+5)/4): ((1))))) ? ((j_l+3)/3): (((((j_l-16*k_t+5)/4)>((1))) ? ((j_l-16*k_t+5)/4): ((1))))))) ? ((j_l-32*j_t-32*k_t-30)/2): (((((j_l+3)/3)>(((((j_l-16*k_t+5)/4)>((1))) ? ((j_l-16*k_t+5)/4): ((1))))) ? ((j_l+3)/3): (((((j_l-16*k_t+5)/4)>((1))) ? ((j_l-16*k_t+5)/4): ((1))))))); k_l <= ((((j_l-32*j_t-32*k_t)/2)<(((((j_l-16*k_t+17)/4)<(((((j_l+n-2)/3)<((n-2))) ? ((j_l+n-2)/3): ((n-2))))) ? ((j_l-16*k_t+17)/4): (((((j_l+n-2)/3)<((n-2))) ? ((j_l+n-2)/3): ((n-2))))))) ? ((j_l-32*j_t-32*k_t)/2): (((((j_l-16*k_t+17)/4)<(((((j_l+n-2)/3)<((n-2))) ? ((j_l+n-2)/3): ((n-2))))) ? ((j_l-16*k_t+17)/4): (((((j_l+n-2)/3)<((n-2))) ? ((j_l+n-2)/3): ((n-2))))))); k_l += 1)
                  B[i][k_l][-j_l+3*k_l] = 0.125*(A[i+1][k_l][-j_l+3*k_l]-2.0*A[i][k_l][-j_l+3*k_l]+A[i-1][k_l][-j_l+3*k_l])+0.125*(A[i][k_l+1][-j_l+3*k_l]-2.0*A[i][k_l][-j_l+3*k_l]+A[i][k_l-1][-j_l+3*k_l])+0.125*(A[i][k_l][-j_l+3*k_l+1]-2.0*A[i][k_l][-j_l+3*k_l]+A[i][k_l][-j_l+3*k_l-1])+A[i][k_l][-j_l+3*k_l];
   polybench_timer_stop();

   polybench_timer_print();
#pragma endscop

}
