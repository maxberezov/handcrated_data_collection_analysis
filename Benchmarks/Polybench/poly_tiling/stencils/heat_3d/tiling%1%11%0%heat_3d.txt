GENERATED TILE DIRECTION=TI - LOCAL TILE DIRECTION=LP
void kernel_heat_3d(int tsteps, int n, double A[10+0][10+0][10+0], double B[10+0][10+0][10+0])
{
   int t, i, j, k;
   //PIPS generated variable
   int j_t, k_t, j_l, k_l;

#pragma scop
   polybench_timer_start();

   for(i = 1; i <= n-1-1; i += 1)
loop_1:
      for(j_t = 0; j_t <= ((((13*n+177)/16)<(((((9*n+35)/16)<(((((15*n+15)/112)<(((((n+10)/4)<(((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))) ? ((n+10)/4): (((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))))) ? ((15*n+15)/112): (((((n+10)/4)<(((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))) ? ((n+10)/4): (((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))))))) ? ((9*n+35)/16): (((((15*n+15)/112)<(((((n+10)/4)<(((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))) ? ((n+10)/4): (((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))))) ? ((15*n+15)/112): (((((n+10)/4)<(((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))) ? ((n+10)/4): (((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))))))))) ? ((13*n+177)/16): (((((9*n+35)/16)<(((((15*n+15)/112)<(((((n+10)/4)<(((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))) ? ((n+10)/4): (((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))))) ? ((15*n+15)/112): (((((n+10)/4)<(((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))) ? ((n+10)/4): (((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))))))) ? ((9*n+35)/16): (((((15*n+15)/112)<(((((n+10)/4)<(((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))) ? ((n+10)/4): (((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))))) ? ((15*n+15)/112): (((((n+10)/4)<(((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))) ? ((n+10)/4): (((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))))))))); j_t += 1)
         for(k_t = ((((-j_t-1)/2)>(((((-16*j_t-n-11)/64)>(((((-8*j_t-n-4)/48)>(((((8*j_t-n+3)/16)>(((-n+3)/32))) ? ((8*j_t-n+3)/16): (((-n+3)/32))))) ? ((-8*j_t-n-4)/48): (((((8*j_t-n+3)/16)>(((-n+3)/32))) ? ((8*j_t-n+3)/16): (((-n+3)/32))))))) ? ((-16*j_t-n-11)/64): (((((-8*j_t-n-4)/48)>(((((8*j_t-n+3)/16)>(((-n+3)/32))) ? ((8*j_t-n+3)/16): (((-n+3)/32))))) ? ((-8*j_t-n-4)/48): (((((8*j_t-n+3)/16)>(((-n+3)/32))) ? ((8*j_t-n+3)/16): (((-n+3)/32))))))))) ? ((-j_t-1)/2): (((((-16*j_t-n-11)/64)>(((((-8*j_t-n-4)/48)>(((((8*j_t-n+3)/16)>(((-n+3)/32))) ? ((8*j_t-n+3)/16): (((-n+3)/32))))) ? ((-8*j_t-n-4)/48): (((((8*j_t-n+3)/16)>(((-n+3)/32))) ? ((8*j_t-n+3)/16): (((-n+3)/32))))))) ? ((-16*j_t-n-11)/64): (((((-8*j_t-n-4)/48)>(((((8*j_t-n+3)/16)>(((-n+3)/32))) ? ((8*j_t-n+3)/16): (((-n+3)/32))))) ? ((-8*j_t-n-4)/48): (((((8*j_t-n+3)/16)>(((-n+3)/32))) ? ((8*j_t-n+3)/16): (((-n+3)/32))))))))); k_t <= (((j_t/2)<(((((-8*j_t+n-3)/16)<(((((-16*j_t+3*n-9)/64)<(((n-3)/32))) ? ((-16*j_t+3*n-9)/64): (((n-3)/32))))) ? ((-8*j_t+n-3)/16): (((((-16*j_t+3*n-9)/64)<(((n-3)/32))) ? ((-16*j_t+3*n-9)/64): (((n-3)/32))))))) ? (j_t/2): (((((-8*j_t+n-3)/16)<(((((-16*j_t+3*n-9)/64)<(((n-3)/32))) ? ((-16*j_t+3*n-9)/64): (((n-3)/32))))) ? ((-8*j_t+n-3)/16): (((((-16*j_t+3*n-9)/64)<(((n-3)/32))) ? ((-16*j_t+3*n-9)/64): (((n-3)/32))))))); k_t += 1)
            for(j_l = (((-16*j_t-13)>((((16*j_t+64*k_t+2)>((((48*j_t-4*n+14)>((((32*k_t+2)>((-n+5))) ? (32*k_t+2): ((-n+5))))) ? (48*j_t-4*n+14): ((((32*k_t+2)>((-n+5))) ? (32*k_t+2): ((-n+5))))))) ? (16*j_t+64*k_t+2): ((((48*j_t-4*n+14)>((((32*k_t+2)>((-n+5))) ? (32*k_t+2): ((-n+5))))) ? (48*j_t-4*n+14): ((((32*k_t+2)>((-n+5))) ? (32*k_t+2): ((-n+5))))))))) ? (-16*j_t-13): ((((16*j_t+64*k_t+2)>((((48*j_t-4*n+14)>((((32*k_t+2)>((-n+5))) ? (32*k_t+2): ((-n+5))))) ? (48*j_t-4*n+14): ((((32*k_t+2)>((-n+5))) ? (32*k_t+2): ((-n+5))))))) ? (16*j_t+64*k_t+2): ((((48*j_t-4*n+14)>((((32*k_t+2)>((-n+5))) ? (32*k_t+2): ((-n+5))))) ? (48*j_t-4*n+14): ((((32*k_t+2)>((-n+5))) ? (32*k_t+2): ((-n+5))))))))); j_l <= (((48*j_t+47)<((((16*j_t+64*k_t+79)<((((-16*j_t+4*n-10)<((((96*k_t+2*n+89)<((((32*k_t+2*n+27)<((3*n-7))) ? (32*k_t+2*n+27): ((3*n-7))))) ? (96*k_t+2*n+89): ((((32*k_t+2*n+27)<((3*n-7))) ? (32*k_t+2*n+27): ((3*n-7))))))) ? (-16*j_t+4*n-10): ((((96*k_t+2*n+89)<((((32*k_t+2*n+27)<((3*n-7))) ? (32*k_t+2*n+27): ((3*n-7))))) ? (96*k_t+2*n+89): ((((32*k_t+2*n+27)<((3*n-7))) ? (32*k_t+2*n+27): ((3*n-7))))))))) ? (16*j_t+64*k_t+79): ((((-16*j_t+4*n-10)<((((96*k_t+2*n+89)<((((32*k_t+2*n+27)<((3*n-7))) ? (32*k_t+2*n+27): ((3*n-7))))) ? (96*k_t+2*n+89): ((((32*k_t+2*n+27)<((3*n-7))) ? (32*k_t+2*n+27): ((3*n-7))))))) ? (-16*j_t+4*n-10): ((((96*k_t+2*n+89)<((((32*k_t+2*n+27)<((3*n-7))) ? (32*k_t+2*n+27): ((3*n-7))))) ? (96*k_t+2*n+89): ((((32*k_t+2*n+27)<((3*n-7))) ? (32*k_t+2*n+27): ((3*n-7))))))))))) ? (48*j_t+47): ((((16*j_t+64*k_t+79)<((((-16*j_t+4*n-10)<((((96*k_t+2*n+89)<((((32*k_t+2*n+27)<((3*n-7))) ? (32*k_t+2*n+27): ((3*n-7))))) ? (96*k_t+2*n+89): ((((32*k_t+2*n+27)<((3*n-7))) ? (32*k_t+2*n+27): ((3*n-7))))))) ? (-16*j_t+4*n-10): ((((96*k_t+2*n+89)<((((32*k_t+2*n+27)<((3*n-7))) ? (32*k_t+2*n+27): ((3*n-7))))) ? (96*k_t+2*n+89): ((((32*k_t+2*n+27)<((3*n-7))) ? (32*k_t+2*n+27): ((3*n-7))))))))) ? (16*j_t+64*k_t+79): ((((-16*j_t+4*n-10)<((((96*k_t+2*n+89)<((((32*k_t+2*n+27)<((3*n-7))) ? (32*k_t+2*n+27): ((3*n-7))))) ? (96*k_t+2*n+89): ((((32*k_t+2*n+27)<((3*n-7))) ? (32*k_t+2*n+27): ((3*n-7))))))) ? (-16*j_t+4*n-10): ((((96*k_t+2*n+89)<((((32*k_t+2*n+27)<((3*n-7))) ? (32*k_t+2*n+27): ((3*n-7))))) ? (96*k_t+2*n+89): ((((32*k_t+2*n+27)<((3*n-7))) ? (32*k_t+2*n+27): ((3*n-7))))))))))); j_l += 1)
               for(k_l = ((((j_l+16*j_t+5)/4)>(((((j_l+3)/3)>(((((j_l-32*k_t-30)/2)>((1))) ? ((j_l-32*k_t-30)/2): ((1))))) ? ((j_l+3)/3): (((((j_l-32*k_t-30)/2)>((1))) ? ((j_l-32*k_t-30)/2): ((1))))))) ? ((j_l+16*j_t+5)/4): (((((j_l+3)/3)>(((((j_l-32*k_t-30)/2)>((1))) ? ((j_l-32*k_t-30)/2): ((1))))) ? ((j_l+3)/3): (((((j_l-32*k_t-30)/2)>((1))) ? ((j_l-32*k_t-30)/2): ((1))))))); k_l <= ((((j_l+16*j_t+17)/4)<(((((j_l-32*k_t)/2)<(((((j_l+n-2)/3)<((n-2))) ? ((j_l+n-2)/3): ((n-2))))) ? ((j_l-32*k_t)/2): (((((j_l+n-2)/3)<((n-2))) ? ((j_l+n-2)/3): ((n-2))))))) ? ((j_l+16*j_t+17)/4): (((((j_l-32*k_t)/2)<(((((j_l+n-2)/3)<((n-2))) ? ((j_l+n-2)/3): ((n-2))))) ? ((j_l-32*k_t)/2): (((((j_l+n-2)/3)<((n-2))) ? ((j_l+n-2)/3): ((n-2))))))); k_l += 1)
                  B[i][k_l][-j_l+3*k_l] = 0.125*(A[i+1][k_l][-j_l+3*k_l]-2.0*A[i][k_l][-j_l+3*k_l]+A[i-1][k_l][-j_l+3*k_l])+0.125*(A[i][k_l+1][-j_l+3*k_l]-2.0*A[i][k_l][-j_l+3*k_l]+A[i][k_l-1][-j_l+3*k_l])+0.125*(A[i][k_l][-j_l+3*k_l+1]-2.0*A[i][k_l][-j_l+3*k_l]+A[i][k_l][-j_l+3*k_l-1])+A[i][k_l][-j_l+3*k_l];
   polybench_timer_stop();

   polybench_timer_print();
#pragma endscop

}
void kernel_heat_3d(int tsteps, int n, double A[10+0][10+0][10+0], double B[10+0][10+0][10+0])
{
   int t, i, j, k;
   //PIPS generated variable
   int j_t, k_t, j_l, k_l;

#pragma scop
   polybench_timer_start();

   for(i = 1; i <= n-1-1; i += 1)
loop_1:
      for(j_t = 0; j_t <= ((((13*n+177)/16)<(((((9*n+35)/16)<(((((15*n+15)/112)<(((((n+10)/4)<(((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))) ? ((n+10)/4): (((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))))) ? ((15*n+15)/112): (((((n+10)/4)<(((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))) ? ((n+10)/4): (((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))))))) ? ((9*n+35)/16): (((((15*n+15)/112)<(((((n+10)/4)<(((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))) ? ((n+10)/4): (((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))))) ? ((15*n+15)/112): (((((n+10)/4)<(((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))) ? ((n+10)/4): (((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))))))))) ? ((13*n+177)/16): (((((9*n+35)/16)<(((((15*n+15)/112)<(((((n+10)/4)<(((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))) ? ((n+10)/4): (((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))))) ? ((15*n+15)/112): (((((n+10)/4)<(((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))) ? ((n+10)/4): (((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))))))) ? ((9*n+35)/16): (((((15*n+15)/112)<(((((n+10)/4)<(((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))) ? ((n+10)/4): (((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))))) ? ((15*n+15)/112): (((((n+10)/4)<(((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))) ? ((n+10)/4): (((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))))))))); j_t += 1)
         for(k_t = ((((-j_t-1)/2)>(((((-16*j_t-n-11)/64)>(((((-8*j_t-n-4)/48)>(((((8*j_t-n+3)/16)>(((-n+3)/32))) ? ((8*j_t-n+3)/16): (((-n+3)/32))))) ? ((-8*j_t-n-4)/48): (((((8*j_t-n+3)/16)>(((-n+3)/32))) ? ((8*j_t-n+3)/16): (((-n+3)/32))))))) ? ((-16*j_t-n-11)/64): (((((-8*j_t-n-4)/48)>(((((8*j_t-n+3)/16)>(((-n+3)/32))) ? ((8*j_t-n+3)/16): (((-n+3)/32))))) ? ((-8*j_t-n-4)/48): (((((8*j_t-n+3)/16)>(((-n+3)/32))) ? ((8*j_t-n+3)/16): (((-n+3)/32))))))))) ? ((-j_t-1)/2): (((((-16*j_t-n-11)/64)>(((((-8*j_t-n-4)/48)>(((((8*j_t-n+3)/16)>(((-n+3)/32))) ? ((8*j_t-n+3)/16): (((-n+3)/32))))) ? ((-8*j_t-n-4)/48): (((((8*j_t-n+3)/16)>(((-n+3)/32))) ? ((8*j_t-n+3)/16): (((-n+3)/32))))))) ? ((-16*j_t-n-11)/64): (((((-8*j_t-n-4)/48)>(((((8*j_t-n+3)/16)>(((-n+3)/32))) ? ((8*j_t-n+3)/16): (((-n+3)/32))))) ? ((-8*j_t-n-4)/48): (((((8*j_t-n+3)/16)>(((-n+3)/32))) ? ((8*j_t-n+3)/16): (((-n+3)/32))))))))); k_t <= (((j_t/2)<(((((-8*j_t+n-3)/16)<(((((-16*j_t+3*n-9)/64)<(((n-3)/32))) ? ((-16*j_t+3*n-9)/64): (((n-3)/32))))) ? ((-8*j_t+n-3)/16): (((((-16*j_t+3*n-9)/64)<(((n-3)/32))) ? ((-16*j_t+3*n-9)/64): (((n-3)/32))))))) ? (j_t/2): (((((-8*j_t+n-3)/16)<(((((-16*j_t+3*n-9)/64)<(((n-3)/32))) ? ((-16*j_t+3*n-9)/64): (((n-3)/32))))) ? ((-8*j_t+n-3)/16): (((((-16*j_t+3*n-9)/64)<(((n-3)/32))) ? ((-16*j_t+3*n-9)/64): (((n-3)/32))))))); k_t += 1)
            for(j_l = (((-16*j_t-13)>((((16*j_t+64*k_t+2)>((((48*j_t-4*n+14)>((((32*k_t+2)>((-n+5))) ? (32*k_t+2): ((-n+5))))) ? (48*j_t-4*n+14): ((((32*k_t+2)>((-n+5))) ? (32*k_t+2): ((-n+5))))))) ? (16*j_t+64*k_t+2): ((((48*j_t-4*n+14)>((((32*k_t+2)>((-n+5))) ? (32*k_t+2): ((-n+5))))) ? (48*j_t-4*n+14): ((((32*k_t+2)>((-n+5))) ? (32*k_t+2): ((-n+5))))))))) ? (-16*j_t-13): ((((16*j_t+64*k_t+2)>((((48*j_t-4*n+14)>((((32*k_t+2)>((-n+5))) ? (32*k_t+2): ((-n+5))))) ? (48*j_t-4*n+14): ((((32*k_t+2)>((-n+5))) ? (32*k_t+2): ((-n+5))))))) ? (16*j_t+64*k_t+2): ((((48*j_t-4*n+14)>((((32*k_t+2)>((-n+5))) ? (32*k_t+2): ((-n+5))))) ? (48*j_t-4*n+14): ((((32*k_t+2)>((-n+5))) ? (32*k_t+2): ((-n+5))))))))); j_l <= (((48*j_t+47)<((((16*j_t+64*k_t+79)<((((-16*j_t+4*n-10)<((((96*k_t+2*n+89)<((((32*k_t+2*n+27)<((3*n-7))) ? (32*k_t+2*n+27): ((3*n-7))))) ? (96*k_t+2*n+89): ((((32*k_t+2*n+27)<((3*n-7))) ? (32*k_t+2*n+27): ((3*n-7))))))) ? (-16*j_t+4*n-10): ((((96*k_t+2*n+89)<((((32*k_t+2*n+27)<((3*n-7))) ? (32*k_t+2*n+27): ((3*n-7))))) ? (96*k_t+2*n+89): ((((32*k_t+2*n+27)<((3*n-7))) ? (32*k_t+2*n+27): ((3*n-7))))))))) ? (16*j_t+64*k_t+79): ((((-16*j_t+4*n-10)<((((96*k_t+2*n+89)<((((32*k_t+2*n+27)<((3*n-7))) ? (32*k_t+2*n+27): ((3*n-7))))) ? (96*k_t+2*n+89): ((((32*k_t+2*n+27)<((3*n-7))) ? (32*k_t+2*n+27): ((3*n-7))))))) ? (-16*j_t+4*n-10): ((((96*k_t+2*n+89)<((((32*k_t+2*n+27)<((3*n-7))) ? (32*k_t+2*n+27): ((3*n-7))))) ? (96*k_t+2*n+89): ((((32*k_t+2*n+27)<((3*n-7))) ? (32*k_t+2*n+27): ((3*n-7))))))))))) ? (48*j_t+47): ((((16*j_t+64*k_t+79)<((((-16*j_t+4*n-10)<((((96*k_t+2*n+89)<((((32*k_t+2*n+27)<((3*n-7))) ? (32*k_t+2*n+27): ((3*n-7))))) ? (96*k_t+2*n+89): ((((32*k_t+2*n+27)<((3*n-7))) ? (32*k_t+2*n+27): ((3*n-7))))))) ? (-16*j_t+4*n-10): ((((96*k_t+2*n+89)<((((32*k_t+2*n+27)<((3*n-7))) ? (32*k_t+2*n+27): ((3*n-7))))) ? (96*k_t+2*n+89): ((((32*k_t+2*n+27)<((3*n-7))) ? (32*k_t+2*n+27): ((3*n-7))))))))) ? (16*j_t+64*k_t+79): ((((-16*j_t+4*n-10)<((((96*k_t+2*n+89)<((((32*k_t+2*n+27)<((3*n-7))) ? (32*k_t+2*n+27): ((3*n-7))))) ? (96*k_t+2*n+89): ((((32*k_t+2*n+27)<((3*n-7))) ? (32*k_t+2*n+27): ((3*n-7))))))) ? (-16*j_t+4*n-10): ((((96*k_t+2*n+89)<((((32*k_t+2*n+27)<((3*n-7))) ? (32*k_t+2*n+27): ((3*n-7))))) ? (96*k_t+2*n+89): ((((32*k_t+2*n+27)<((3*n-7))) ? (32*k_t+2*n+27): ((3*n-7))))))))))); j_l += 1)
               for(k_l = ((((j_l+16*j_t+5)/4)>(((((j_l+3)/3)>(((((j_l-32*k_t-30)/2)>((1))) ? ((j_l-32*k_t-30)/2): ((1))))) ? ((j_l+3)/3): (((((j_l-32*k_t-30)/2)>((1))) ? ((j_l-32*k_t-30)/2): ((1))))))) ? ((j_l+16*j_t+5)/4): (((((j_l+3)/3)>(((((j_l-32*k_t-30)/2)>((1))) ? ((j_l-32*k_t-30)/2): ((1))))) ? ((j_l+3)/3): (((((j_l-32*k_t-30)/2)>((1))) ? ((j_l-32*k_t-30)/2): ((1))))))); k_l <= ((((j_l+16*j_t+17)/4)<(((((j_l-32*k_t)/2)<(((((j_l+n-2)/3)<((n-2))) ? ((j_l+n-2)/3): ((n-2))))) ? ((j_l-32*k_t)/2): (((((j_l+n-2)/3)<((n-2))) ? ((j_l+n-2)/3): ((n-2))))))) ? ((j_l+16*j_t+17)/4): (((((j_l-32*k_t)/2)<(((((j_l+n-2)/3)<((n-2))) ? ((j_l+n-2)/3): ((n-2))))) ? ((j_l-32*k_t)/2): (((((j_l+n-2)/3)<((n-2))) ? ((j_l+n-2)/3): ((n-2))))))); k_l += 1)
                  B[i][k_l][-j_l+3*k_l] = 0.125*(A[i+1][k_l][-j_l+3*k_l]-2.0*A[i][k_l][-j_l+3*k_l]+A[i-1][k_l][-j_l+3*k_l])+0.125*(A[i][k_l+1][-j_l+3*k_l]-2.0*A[i][k_l][-j_l+3*k_l]+A[i][k_l-1][-j_l+3*k_l])+0.125*(A[i][k_l][-j_l+3*k_l+1]-2.0*A[i][k_l][-j_l+3*k_l]+A[i][k_l][-j_l+3*k_l-1])+A[i][k_l][-j_l+3*k_l];
   polybench_timer_stop();

   polybench_timer_print();
#pragma endscop

}
