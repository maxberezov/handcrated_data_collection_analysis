GENERATED TILE DIRECTION=TI - LOCAL TILE DIRECTION=LP
void kernel_seidel_2d(int tsteps, int n, double A[4000+0][4000+0][4000+0])
{
   int t, i, j;
   //PIPS generated variable
   int i_t, j_t, i_l, j_l;

#pragma scop
   polybench_timer_start();

   for(t = 1; t <= n-1; t += 1)
loop_1:
      for(i_t = 0; i_t <= ((((13*n+177)/16)<(((((9*n+35)/16)<(((((15*n+15)/112)<(((((n+10)/4)<(((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))) ? ((n+10)/4): (((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))))) ? ((15*n+15)/112): (((((n+10)/4)<(((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))) ? ((n+10)/4): (((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))))))) ? ((9*n+35)/16): (((((15*n+15)/112)<(((((n+10)/4)<(((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))) ? ((n+10)/4): (((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))))) ? ((15*n+15)/112): (((((n+10)/4)<(((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))) ? ((n+10)/4): (((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))))))))) ? ((13*n+177)/16): (((((9*n+35)/16)<(((((15*n+15)/112)<(((((n+10)/4)<(((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))) ? ((n+10)/4): (((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))))) ? ((15*n+15)/112): (((((n+10)/4)<(((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))) ? ((n+10)/4): (((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))))))) ? ((9*n+35)/16): (((((15*n+15)/112)<(((((n+10)/4)<(((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))) ? ((n+10)/4): (((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))))) ? ((15*n+15)/112): (((((n+10)/4)<(((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))) ? ((n+10)/4): (((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))))))))); i_t += 1)
         for(j_t = ((((-i_t-1)/2)>(((((-16*i_t-n-11)/64)>(((((-8*i_t-n-4)/48)>(((((8*i_t-n+3)/16)>(((-n+3)/32))) ? ((8*i_t-n+3)/16): (((-n+3)/32))))) ? ((-8*i_t-n-4)/48): (((((8*i_t-n+3)/16)>(((-n+3)/32))) ? ((8*i_t-n+3)/16): (((-n+3)/32))))))) ? ((-16*i_t-n-11)/64): (((((-8*i_t-n-4)/48)>(((((8*i_t-n+3)/16)>(((-n+3)/32))) ? ((8*i_t-n+3)/16): (((-n+3)/32))))) ? ((-8*i_t-n-4)/48): (((((8*i_t-n+3)/16)>(((-n+3)/32))) ? ((8*i_t-n+3)/16): (((-n+3)/32))))))))) ? ((-i_t-1)/2): (((((-16*i_t-n-11)/64)>(((((-8*i_t-n-4)/48)>(((((8*i_t-n+3)/16)>(((-n+3)/32))) ? ((8*i_t-n+3)/16): (((-n+3)/32))))) ? ((-8*i_t-n-4)/48): (((((8*i_t-n+3)/16)>(((-n+3)/32))) ? ((8*i_t-n+3)/16): (((-n+3)/32))))))) ? ((-16*i_t-n-11)/64): (((((-8*i_t-n-4)/48)>(((((8*i_t-n+3)/16)>(((-n+3)/32))) ? ((8*i_t-n+3)/16): (((-n+3)/32))))) ? ((-8*i_t-n-4)/48): (((((8*i_t-n+3)/16)>(((-n+3)/32))) ? ((8*i_t-n+3)/16): (((-n+3)/32))))))))); j_t <= (((i_t/2)<(((((-8*i_t+n-3)/16)<(((((-16*i_t+3*n-9)/64)<(((n-3)/32))) ? ((-16*i_t+3*n-9)/64): (((n-3)/32))))) ? ((-8*i_t+n-3)/16): (((((-16*i_t+3*n-9)/64)<(((n-3)/32))) ? ((-16*i_t+3*n-9)/64): (((n-3)/32))))))) ? (i_t/2): (((((-8*i_t+n-3)/16)<(((((-16*i_t+3*n-9)/64)<(((n-3)/32))) ? ((-16*i_t+3*n-9)/64): (((n-3)/32))))) ? ((-8*i_t+n-3)/16): (((((-16*i_t+3*n-9)/64)<(((n-3)/32))) ? ((-16*i_t+3*n-9)/64): (((n-3)/32))))))); j_t += 1)
            for(i_l = (((-16*i_t-13)>((((16*i_t+64*j_t+2)>((((48*i_t-4*n+14)>((((32*j_t+2)>((-n+5))) ? (32*j_t+2): ((-n+5))))) ? (48*i_t-4*n+14): ((((32*j_t+2)>((-n+5))) ? (32*j_t+2): ((-n+5))))))) ? (16*i_t+64*j_t+2): ((((48*i_t-4*n+14)>((((32*j_t+2)>((-n+5))) ? (32*j_t+2): ((-n+5))))) ? (48*i_t-4*n+14): ((((32*j_t+2)>((-n+5))) ? (32*j_t+2): ((-n+5))))))))) ? (-16*i_t-13): ((((16*i_t+64*j_t+2)>((((48*i_t-4*n+14)>((((32*j_t+2)>((-n+5))) ? (32*j_t+2): ((-n+5))))) ? (48*i_t-4*n+14): ((((32*j_t+2)>((-n+5))) ? (32*j_t+2): ((-n+5))))))) ? (16*i_t+64*j_t+2): ((((48*i_t-4*n+14)>((((32*j_t+2)>((-n+5))) ? (32*j_t+2): ((-n+5))))) ? (48*i_t-4*n+14): ((((32*j_t+2)>((-n+5))) ? (32*j_t+2): ((-n+5))))))))); i_l <= (((48*i_t+47)<((((16*i_t+64*j_t+79)<((((-16*i_t+4*n-10)<((((96*j_t+2*n+89)<((((32*j_t+2*n+27)<((3*n-7))) ? (32*j_t+2*n+27): ((3*n-7))))) ? (96*j_t+2*n+89): ((((32*j_t+2*n+27)<((3*n-7))) ? (32*j_t+2*n+27): ((3*n-7))))))) ? (-16*i_t+4*n-10): ((((96*j_t+2*n+89)<((((32*j_t+2*n+27)<((3*n-7))) ? (32*j_t+2*n+27): ((3*n-7))))) ? (96*j_t+2*n+89): ((((32*j_t+2*n+27)<((3*n-7))) ? (32*j_t+2*n+27): ((3*n-7))))))))) ? (16*i_t+64*j_t+79): ((((-16*i_t+4*n-10)<((((96*j_t+2*n+89)<((((32*j_t+2*n+27)<((3*n-7))) ? (32*j_t+2*n+27): ((3*n-7))))) ? (96*j_t+2*n+89): ((((32*j_t+2*n+27)<((3*n-7))) ? (32*j_t+2*n+27): ((3*n-7))))))) ? (-16*i_t+4*n-10): ((((96*j_t+2*n+89)<((((32*j_t+2*n+27)<((3*n-7))) ? (32*j_t+2*n+27): ((3*n-7))))) ? (96*j_t+2*n+89): ((((32*j_t+2*n+27)<((3*n-7))) ? (32*j_t+2*n+27): ((3*n-7))))))))))) ? (48*i_t+47): ((((16*i_t+64*j_t+79)<((((-16*i_t+4*n-10)<((((96*j_t+2*n+89)<((((32*j_t+2*n+27)<((3*n-7))) ? (32*j_t+2*n+27): ((3*n-7))))) ? (96*j_t+2*n+89): ((((32*j_t+2*n+27)<((3*n-7))) ? (32*j_t+2*n+27): ((3*n-7))))))) ? (-16*i_t+4*n-10): ((((96*j_t+2*n+89)<((((32*j_t+2*n+27)<((3*n-7))) ? (32*j_t+2*n+27): ((3*n-7))))) ? (96*j_t+2*n+89): ((((32*j_t+2*n+27)<((3*n-7))) ? (32*j_t+2*n+27): ((3*n-7))))))))) ? (16*i_t+64*j_t+79): ((((-16*i_t+4*n-10)<((((96*j_t+2*n+89)<((((32*j_t+2*n+27)<((3*n-7))) ? (32*j_t+2*n+27): ((3*n-7))))) ? (96*j_t+2*n+89): ((((32*j_t+2*n+27)<((3*n-7))) ? (32*j_t+2*n+27): ((3*n-7))))))) ? (-16*i_t+4*n-10): ((((96*j_t+2*n+89)<((((32*j_t+2*n+27)<((3*n-7))) ? (32*j_t+2*n+27): ((3*n-7))))) ? (96*j_t+2*n+89): ((((32*j_t+2*n+27)<((3*n-7))) ? (32*j_t+2*n+27): ((3*n-7))))))))))); i_l += 1)
               for(j_l = ((((i_l+16*i_t+5)/4)>(((((i_l+3)/3)>(((((i_l-32*j_t-30)/2)>((1))) ? ((i_l-32*j_t-30)/2): ((1))))) ? ((i_l+3)/3): (((((i_l-32*j_t-30)/2)>((1))) ? ((i_l-32*j_t-30)/2): ((1))))))) ? ((i_l+16*i_t+5)/4): (((((i_l+3)/3)>(((((i_l-32*j_t-30)/2)>((1))) ? ((i_l-32*j_t-30)/2): ((1))))) ? ((i_l+3)/3): (((((i_l-32*j_t-30)/2)>((1))) ? ((i_l-32*j_t-30)/2): ((1))))))); j_l <= ((((i_l+16*i_t+17)/4)<(((((i_l-32*j_t)/2)<(((((i_l+n-2)/3)<((n-2))) ? ((i_l+n-2)/3): ((n-2))))) ? ((i_l-32*j_t)/2): (((((i_l+n-2)/3)<((n-2))) ? ((i_l+n-2)/3): ((n-2))))))) ? ((i_l+16*i_t+17)/4): (((((i_l-32*j_t)/2)<(((((i_l+n-2)/3)<((n-2))) ? ((i_l+n-2)/3): ((n-2))))) ? ((i_l-32*j_t)/2): (((((i_l+n-2)/3)<((n-2))) ? ((i_l+n-2)/3): ((n-2))))))); j_l += 1)
                  A[t][j_l][-i_l+3*j_l] = (A[t-1][j_l-1][-i_l+3*j_l-1]+A[t-1][j_l-1][-i_l+3*j_l])/9.0;
   polybench_timer_stop();

   polybench_timer_print();
#pragma endscop

}
void kernel_seidel_2d(int tsteps, int n, double A[4000+0][4000+0][4000+0])
{
   int t, i, j;
   //PIPS generated variable
   int i_t, j_t, i_l, j_l;

#pragma scop
   polybench_timer_start();

   for(t = 1; t <= n-1; t += 1)
loop_1:
      for(i_t = 0; i_t <= ((((13*n+177)/16)<(((((9*n+35)/16)<(((((15*n+15)/112)<(((((n+10)/4)<(((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))) ? ((n+10)/4): (((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))))) ? ((15*n+15)/112): (((((n+10)/4)<(((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))) ? ((n+10)/4): (((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))))))) ? ((9*n+35)/16): (((((15*n+15)/112)<(((((n+10)/4)<(((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))) ? ((n+10)/4): (((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))))) ? ((15*n+15)/112): (((((n+10)/4)<(((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))) ? ((n+10)/4): (((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))))))))) ? ((13*n+177)/16): (((((9*n+35)/16)<(((((15*n+15)/112)<(((((n+10)/4)<(((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))) ? ((n+10)/4): (((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))))) ? ((15*n+15)/112): (((((n+10)/4)<(((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))) ? ((n+10)/4): (((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))))))) ? ((9*n+35)/16): (((((15*n+15)/112)<(((((n+10)/4)<(((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))) ? ((n+10)/4): (((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))))) ? ((15*n+15)/112): (((((n+10)/4)<(((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))) ? ((n+10)/4): (((((3*n+1)/16)<(((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))) ? ((3*n+1)/16): (((((n-3)/8)<(((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))) ? ((n-3)/8): (((((5*n-15)/16)<(((7*n-21)/48))) ? ((5*n-15)/16): (((7*n-21)/48))))))))))))))); i_t += 1)
         for(j_t = ((((-i_t-1)/2)>(((((-16*i_t-n-11)/64)>(((((-8*i_t-n-4)/48)>(((((8*i_t-n+3)/16)>(((-n+3)/32))) ? ((8*i_t-n+3)/16): (((-n+3)/32))))) ? ((-8*i_t-n-4)/48): (((((8*i_t-n+3)/16)>(((-n+3)/32))) ? ((8*i_t-n+3)/16): (((-n+3)/32))))))) ? ((-16*i_t-n-11)/64): (((((-8*i_t-n-4)/48)>(((((8*i_t-n+3)/16)>(((-n+3)/32))) ? ((8*i_t-n+3)/16): (((-n+3)/32))))) ? ((-8*i_t-n-4)/48): (((((8*i_t-n+3)/16)>(((-n+3)/32))) ? ((8*i_t-n+3)/16): (((-n+3)/32))))))))) ? ((-i_t-1)/2): (((((-16*i_t-n-11)/64)>(((((-8*i_t-n-4)/48)>(((((8*i_t-n+3)/16)>(((-n+3)/32))) ? ((8*i_t-n+3)/16): (((-n+3)/32))))) ? ((-8*i_t-n-4)/48): (((((8*i_t-n+3)/16)>(((-n+3)/32))) ? ((8*i_t-n+3)/16): (((-n+3)/32))))))) ? ((-16*i_t-n-11)/64): (((((-8*i_t-n-4)/48)>(((((8*i_t-n+3)/16)>(((-n+3)/32))) ? ((8*i_t-n+3)/16): (((-n+3)/32))))) ? ((-8*i_t-n-4)/48): (((((8*i_t-n+3)/16)>(((-n+3)/32))) ? ((8*i_t-n+3)/16): (((-n+3)/32))))))))); j_t <= (((i_t/2)<(((((-8*i_t+n-3)/16)<(((((-16*i_t+3*n-9)/64)<(((n-3)/32))) ? ((-16*i_t+3*n-9)/64): (((n-3)/32))))) ? ((-8*i_t+n-3)/16): (((((-16*i_t+3*n-9)/64)<(((n-3)/32))) ? ((-16*i_t+3*n-9)/64): (((n-3)/32))))))) ? (i_t/2): (((((-8*i_t+n-3)/16)<(((((-16*i_t+3*n-9)/64)<(((n-3)/32))) ? ((-16*i_t+3*n-9)/64): (((n-3)/32))))) ? ((-8*i_t+n-3)/16): (((((-16*i_t+3*n-9)/64)<(((n-3)/32))) ? ((-16*i_t+3*n-9)/64): (((n-3)/32))))))); j_t += 1)
            for(i_l = (((-16*i_t-13)>((((16*i_t+64*j_t+2)>((((48*i_t-4*n+14)>((((32*j_t+2)>((-n+5))) ? (32*j_t+2): ((-n+5))))) ? (48*i_t-4*n+14): ((((32*j_t+2)>((-n+5))) ? (32*j_t+2): ((-n+5))))))) ? (16*i_t+64*j_t+2): ((((48*i_t-4*n+14)>((((32*j_t+2)>((-n+5))) ? (32*j_t+2): ((-n+5))))) ? (48*i_t-4*n+14): ((((32*j_t+2)>((-n+5))) ? (32*j_t+2): ((-n+5))))))))) ? (-16*i_t-13): ((((16*i_t+64*j_t+2)>((((48*i_t-4*n+14)>((((32*j_t+2)>((-n+5))) ? (32*j_t+2): ((-n+5))))) ? (48*i_t-4*n+14): ((((32*j_t+2)>((-n+5))) ? (32*j_t+2): ((-n+5))))))) ? (16*i_t+64*j_t+2): ((((48*i_t-4*n+14)>((((32*j_t+2)>((-n+5))) ? (32*j_t+2): ((-n+5))))) ? (48*i_t-4*n+14): ((((32*j_t+2)>((-n+5))) ? (32*j_t+2): ((-n+5))))))))); i_l <= (((48*i_t+47)<((((16*i_t+64*j_t+79)<((((-16*i_t+4*n-10)<((((96*j_t+2*n+89)<((((32*j_t+2*n+27)<((3*n-7))) ? (32*j_t+2*n+27): ((3*n-7))))) ? (96*j_t+2*n+89): ((((32*j_t+2*n+27)<((3*n-7))) ? (32*j_t+2*n+27): ((3*n-7))))))) ? (-16*i_t+4*n-10): ((((96*j_t+2*n+89)<((((32*j_t+2*n+27)<((3*n-7))) ? (32*j_t+2*n+27): ((3*n-7))))) ? (96*j_t+2*n+89): ((((32*j_t+2*n+27)<((3*n-7))) ? (32*j_t+2*n+27): ((3*n-7))))))))) ? (16*i_t+64*j_t+79): ((((-16*i_t+4*n-10)<((((96*j_t+2*n+89)<((((32*j_t+2*n+27)<((3*n-7))) ? (32*j_t+2*n+27): ((3*n-7))))) ? (96*j_t+2*n+89): ((((32*j_t+2*n+27)<((3*n-7))) ? (32*j_t+2*n+27): ((3*n-7))))))) ? (-16*i_t+4*n-10): ((((96*j_t+2*n+89)<((((32*j_t+2*n+27)<((3*n-7))) ? (32*j_t+2*n+27): ((3*n-7))))) ? (96*j_t+2*n+89): ((((32*j_t+2*n+27)<((3*n-7))) ? (32*j_t+2*n+27): ((3*n-7))))))))))) ? (48*i_t+47): ((((16*i_t+64*j_t+79)<((((-16*i_t+4*n-10)<((((96*j_t+2*n+89)<((((32*j_t+2*n+27)<((3*n-7))) ? (32*j_t+2*n+27): ((3*n-7))))) ? (96*j_t+2*n+89): ((((32*j_t+2*n+27)<((3*n-7))) ? (32*j_t+2*n+27): ((3*n-7))))))) ? (-16*i_t+4*n-10): ((((96*j_t+2*n+89)<((((32*j_t+2*n+27)<((3*n-7))) ? (32*j_t+2*n+27): ((3*n-7))))) ? (96*j_t+2*n+89): ((((32*j_t+2*n+27)<((3*n-7))) ? (32*j_t+2*n+27): ((3*n-7))))))))) ? (16*i_t+64*j_t+79): ((((-16*i_t+4*n-10)<((((96*j_t+2*n+89)<((((32*j_t+2*n+27)<((3*n-7))) ? (32*j_t+2*n+27): ((3*n-7))))) ? (96*j_t+2*n+89): ((((32*j_t+2*n+27)<((3*n-7))) ? (32*j_t+2*n+27): ((3*n-7))))))) ? (-16*i_t+4*n-10): ((((96*j_t+2*n+89)<((((32*j_t+2*n+27)<((3*n-7))) ? (32*j_t+2*n+27): ((3*n-7))))) ? (96*j_t+2*n+89): ((((32*j_t+2*n+27)<((3*n-7))) ? (32*j_t+2*n+27): ((3*n-7))))))))))); i_l += 1)
               for(j_l = ((((i_l+16*i_t+5)/4)>(((((i_l+3)/3)>(((((i_l-32*j_t-30)/2)>((1))) ? ((i_l-32*j_t-30)/2): ((1))))) ? ((i_l+3)/3): (((((i_l-32*j_t-30)/2)>((1))) ? ((i_l-32*j_t-30)/2): ((1))))))) ? ((i_l+16*i_t+5)/4): (((((i_l+3)/3)>(((((i_l-32*j_t-30)/2)>((1))) ? ((i_l-32*j_t-30)/2): ((1))))) ? ((i_l+3)/3): (((((i_l-32*j_t-30)/2)>((1))) ? ((i_l-32*j_t-30)/2): ((1))))))); j_l <= ((((i_l+16*i_t+17)/4)<(((((i_l-32*j_t)/2)<(((((i_l+n-2)/3)<((n-2))) ? ((i_l+n-2)/3): ((n-2))))) ? ((i_l-32*j_t)/2): (((((i_l+n-2)/3)<((n-2))) ? ((i_l+n-2)/3): ((n-2))))))) ? ((i_l+16*i_t+17)/4): (((((i_l-32*j_t)/2)<(((((i_l+n-2)/3)<((n-2))) ? ((i_l+n-2)/3): ((n-2))))) ? ((i_l-32*j_t)/2): (((((i_l+n-2)/3)<((n-2))) ? ((i_l+n-2)/3): ((n-2))))))); j_l += 1)
                  A[t][j_l][-i_l+3*j_l] = (A[t-1][j_l-1][-i_l+3*j_l-1]+A[t-1][j_l-1][-i_l+3*j_l])/9.0;
   polybench_timer_stop();

   polybench_timer_print();
#pragma endscop

}
