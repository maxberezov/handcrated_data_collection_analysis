GENERATED TILE DIRECTION=TI - LOCAL TILE DIRECTION=LP
void kernel_seidel_2d(int tsteps, int n, double A[40+0][40+0][40+0])
{
   int t, i, j;
   //PIPS generated variable
   int i_t, j_t, i_l, j_l;

#pragma scop
   polybench_timer_start();

   for(t = 1; t <= n-1; t += 1)
loop_1:
      for(i_t = 0; i_t <= ((((13*n+65)/8)<(((((n+3)/2)<(((((9*n+3)/8)<(((((n-3)/4)<(((((3*n-5)/8)<(((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))) ? ((3*n-5)/8): (((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))))) ? ((n-3)/4): (((((3*n-5)/8)<(((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))) ? ((3*n-5)/8): (((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))))))) ? ((9*n+3)/8): (((((n-3)/4)<(((((3*n-5)/8)<(((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))) ? ((3*n-5)/8): (((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))))) ? ((n-3)/4): (((((3*n-5)/8)<(((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))) ? ((3*n-5)/8): (((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))))))))) ? ((n+3)/2): (((((9*n+3)/8)<(((((n-3)/4)<(((((3*n-5)/8)<(((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))) ? ((3*n-5)/8): (((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))))) ? ((n-3)/4): (((((3*n-5)/8)<(((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))) ? ((3*n-5)/8): (((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))))))) ? ((9*n+3)/8): (((((n-3)/4)<(((((3*n-5)/8)<(((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))) ? ((3*n-5)/8): (((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))))) ? ((n-3)/4): (((((3*n-5)/8)<(((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))) ? ((3*n-5)/8): (((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))))))))))) ? ((13*n+65)/8): (((((n+3)/2)<(((((9*n+3)/8)<(((((n-3)/4)<(((((3*n-5)/8)<(((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))) ? ((3*n-5)/8): (((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))))) ? ((n-3)/4): (((((3*n-5)/8)<(((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))) ? ((3*n-5)/8): (((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))))))) ? ((9*n+3)/8): (((((n-3)/4)<(((((3*n-5)/8)<(((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))) ? ((3*n-5)/8): (((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))))) ? ((n-3)/4): (((((3*n-5)/8)<(((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))) ? ((3*n-5)/8): (((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))))))))) ? ((n+3)/2): (((((9*n+3)/8)<(((((n-3)/4)<(((((3*n-5)/8)<(((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))) ? ((3*n-5)/8): (((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))))) ? ((n-3)/4): (((((3*n-5)/8)<(((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))) ? ((3*n-5)/8): (((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))))))) ? ((9*n+3)/8): (((((n-3)/4)<(((((3*n-5)/8)<(((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))) ? ((3*n-5)/8): (((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))))) ? ((n-3)/4): (((((3*n-5)/8)<(((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))) ? ((3*n-5)/8): (((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))))))))))); i_t += 1)
         for(j_t = ((((-i_t-1)/2)>(((((-8*i_t-n-3)/32)>(((((-4*i_t-n)/24)>(((((4*i_t-n+3)/8)>(((-n+3)/16))) ? ((4*i_t-n+3)/8): (((-n+3)/16))))) ? ((-4*i_t-n)/24): (((((4*i_t-n+3)/8)>(((-n+3)/16))) ? ((4*i_t-n+3)/8): (((-n+3)/16))))))) ? ((-8*i_t-n-3)/32): (((((-4*i_t-n)/24)>(((((4*i_t-n+3)/8)>(((-n+3)/16))) ? ((4*i_t-n+3)/8): (((-n+3)/16))))) ? ((-4*i_t-n)/24): (((((4*i_t-n+3)/8)>(((-n+3)/16))) ? ((4*i_t-n+3)/8): (((-n+3)/16))))))))) ? ((-i_t-1)/2): (((((-8*i_t-n-3)/32)>(((((-4*i_t-n)/24)>(((((4*i_t-n+3)/8)>(((-n+3)/16))) ? ((4*i_t-n+3)/8): (((-n+3)/16))))) ? ((-4*i_t-n)/24): (((((4*i_t-n+3)/8)>(((-n+3)/16))) ? ((4*i_t-n+3)/8): (((-n+3)/16))))))) ? ((-8*i_t-n-3)/32): (((((-4*i_t-n)/24)>(((((4*i_t-n+3)/8)>(((-n+3)/16))) ? ((4*i_t-n+3)/8): (((-n+3)/16))))) ? ((-4*i_t-n)/24): (((((4*i_t-n+3)/8)>(((-n+3)/16))) ? ((4*i_t-n+3)/8): (((-n+3)/16))))))))); j_t <= (((i_t/2)<(((((-4*i_t+n-3)/8)<(((((-8*i_t+3*n-9)/32)<(((n-3)/16))) ? ((-8*i_t+3*n-9)/32): (((n-3)/16))))) ? ((-4*i_t+n-3)/8): (((((-8*i_t+3*n-9)/32)<(((n-3)/16))) ? ((-8*i_t+3*n-9)/32): (((n-3)/16))))))) ? (i_t/2): (((((-4*i_t+n-3)/8)<(((((-8*i_t+3*n-9)/32)<(((n-3)/16))) ? ((-8*i_t+3*n-9)/32): (((n-3)/16))))) ? ((-4*i_t+n-3)/8): (((((-8*i_t+3*n-9)/32)<(((n-3)/16))) ? ((-8*i_t+3*n-9)/32): (((n-3)/16))))))); j_t += 1)
            for(i_l = (((-8*i_t-5)>((((8*i_t+32*j_t+2)>((((24*i_t-4*n+14)>((((16*j_t+2)>((-n+5))) ? (16*j_t+2): ((-n+5))))) ? (24*i_t-4*n+14): ((((16*j_t+2)>((-n+5))) ? (16*j_t+2): ((-n+5))))))) ? (8*i_t+32*j_t+2): ((((24*i_t-4*n+14)>((((16*j_t+2)>((-n+5))) ? (16*j_t+2): ((-n+5))))) ? (24*i_t-4*n+14): ((((16*j_t+2)>((-n+5))) ? (16*j_t+2): ((-n+5))))))))) ? (-8*i_t-5): ((((8*i_t+32*j_t+2)>((((24*i_t-4*n+14)>((((16*j_t+2)>((-n+5))) ? (16*j_t+2): ((-n+5))))) ? (24*i_t-4*n+14): ((((16*j_t+2)>((-n+5))) ? (16*j_t+2): ((-n+5))))))) ? (8*i_t+32*j_t+2): ((((24*i_t-4*n+14)>((((16*j_t+2)>((-n+5))) ? (16*j_t+2): ((-n+5))))) ? (24*i_t-4*n+14): ((((16*j_t+2)>((-n+5))) ? (16*j_t+2): ((-n+5))))))))); i_l <= (((24*i_t+23)<((((8*i_t+32*j_t+39)<((((-8*i_t+4*n-10)<((((48*j_t+2*n+41)<((((16*j_t+2*n+11)<((3*n-7))) ? (16*j_t+2*n+11): ((3*n-7))))) ? (48*j_t+2*n+41): ((((16*j_t+2*n+11)<((3*n-7))) ? (16*j_t+2*n+11): ((3*n-7))))))) ? (-8*i_t+4*n-10): ((((48*j_t+2*n+41)<((((16*j_t+2*n+11)<((3*n-7))) ? (16*j_t+2*n+11): ((3*n-7))))) ? (48*j_t+2*n+41): ((((16*j_t+2*n+11)<((3*n-7))) ? (16*j_t+2*n+11): ((3*n-7))))))))) ? (8*i_t+32*j_t+39): ((((-8*i_t+4*n-10)<((((48*j_t+2*n+41)<((((16*j_t+2*n+11)<((3*n-7))) ? (16*j_t+2*n+11): ((3*n-7))))) ? (48*j_t+2*n+41): ((((16*j_t+2*n+11)<((3*n-7))) ? (16*j_t+2*n+11): ((3*n-7))))))) ? (-8*i_t+4*n-10): ((((48*j_t+2*n+41)<((((16*j_t+2*n+11)<((3*n-7))) ? (16*j_t+2*n+11): ((3*n-7))))) ? (48*j_t+2*n+41): ((((16*j_t+2*n+11)<((3*n-7))) ? (16*j_t+2*n+11): ((3*n-7))))))))))) ? (24*i_t+23): ((((8*i_t+32*j_t+39)<((((-8*i_t+4*n-10)<((((48*j_t+2*n+41)<((((16*j_t+2*n+11)<((3*n-7))) ? (16*j_t+2*n+11): ((3*n-7))))) ? (48*j_t+2*n+41): ((((16*j_t+2*n+11)<((3*n-7))) ? (16*j_t+2*n+11): ((3*n-7))))))) ? (-8*i_t+4*n-10): ((((48*j_t+2*n+41)<((((16*j_t+2*n+11)<((3*n-7))) ? (16*j_t+2*n+11): ((3*n-7))))) ? (48*j_t+2*n+41): ((((16*j_t+2*n+11)<((3*n-7))) ? (16*j_t+2*n+11): ((3*n-7))))))))) ? (8*i_t+32*j_t+39): ((((-8*i_t+4*n-10)<((((48*j_t+2*n+41)<((((16*j_t+2*n+11)<((3*n-7))) ? (16*j_t+2*n+11): ((3*n-7))))) ? (48*j_t+2*n+41): ((((16*j_t+2*n+11)<((3*n-7))) ? (16*j_t+2*n+11): ((3*n-7))))))) ? (-8*i_t+4*n-10): ((((48*j_t+2*n+41)<((((16*j_t+2*n+11)<((3*n-7))) ? (16*j_t+2*n+11): ((3*n-7))))) ? (48*j_t+2*n+41): ((((16*j_t+2*n+11)<((3*n-7))) ? (16*j_t+2*n+11): ((3*n-7))))))))))); i_l += 1)
               for(j_l = ((((i_l+8*i_t+5)/4)>(((((i_l+3)/3)>(((((i_l-16*j_t-14)/2)>((1))) ? ((i_l-16*j_t-14)/2): ((1))))) ? ((i_l+3)/3): (((((i_l-16*j_t-14)/2)>((1))) ? ((i_l-16*j_t-14)/2): ((1))))))) ? ((i_l+8*i_t+5)/4): (((((i_l+3)/3)>(((((i_l-16*j_t-14)/2)>((1))) ? ((i_l-16*j_t-14)/2): ((1))))) ? ((i_l+3)/3): (((((i_l-16*j_t-14)/2)>((1))) ? ((i_l-16*j_t-14)/2): ((1))))))); j_l <= ((((i_l+8*i_t+9)/4)<(((((i_l-16*j_t)/2)<(((((i_l+n-2)/3)<((n-2))) ? ((i_l+n-2)/3): ((n-2))))) ? ((i_l-16*j_t)/2): (((((i_l+n-2)/3)<((n-2))) ? ((i_l+n-2)/3): ((n-2))))))) ? ((i_l+8*i_t+9)/4): (((((i_l-16*j_t)/2)<(((((i_l+n-2)/3)<((n-2))) ? ((i_l+n-2)/3): ((n-2))))) ? ((i_l-16*j_t)/2): (((((i_l+n-2)/3)<((n-2))) ? ((i_l+n-2)/3): ((n-2))))))); j_l += 1)
                  A[t][j_l][-i_l+3*j_l] = (A[t-1][j_l-1][-i_l+3*j_l-1]+A[t-1][j_l-1][-i_l+3*j_l])/9.0;
   polybench_timer_stop();

   polybench_timer_print();
#pragma endscop

}
void kernel_seidel_2d(int tsteps, int n, double A[40+0][40+0][40+0])
{
   int t, i, j;
   //PIPS generated variable
   int i_t, j_t, i_l, j_l;

#pragma scop
   polybench_timer_start();

   for(t = 1; t <= n-1; t += 1)
loop_1:
      for(i_t = 0; i_t <= ((((13*n+65)/8)<(((((n+3)/2)<(((((9*n+3)/8)<(((((n-3)/4)<(((((3*n-5)/8)<(((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))) ? ((3*n-5)/8): (((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))))) ? ((n-3)/4): (((((3*n-5)/8)<(((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))) ? ((3*n-5)/8): (((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))))))) ? ((9*n+3)/8): (((((n-3)/4)<(((((3*n-5)/8)<(((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))) ? ((3*n-5)/8): (((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))))) ? ((n-3)/4): (((((3*n-5)/8)<(((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))) ? ((3*n-5)/8): (((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))))))))) ? ((n+3)/2): (((((9*n+3)/8)<(((((n-3)/4)<(((((3*n-5)/8)<(((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))) ? ((3*n-5)/8): (((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))))) ? ((n-3)/4): (((((3*n-5)/8)<(((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))) ? ((3*n-5)/8): (((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))))))) ? ((9*n+3)/8): (((((n-3)/4)<(((((3*n-5)/8)<(((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))) ? ((3*n-5)/8): (((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))))) ? ((n-3)/4): (((((3*n-5)/8)<(((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))) ? ((3*n-5)/8): (((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))))))))))) ? ((13*n+65)/8): (((((n+3)/2)<(((((9*n+3)/8)<(((((n-3)/4)<(((((3*n-5)/8)<(((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))) ? ((3*n-5)/8): (((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))))) ? ((n-3)/4): (((((3*n-5)/8)<(((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))) ? ((3*n-5)/8): (((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))))))) ? ((9*n+3)/8): (((((n-3)/4)<(((((3*n-5)/8)<(((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))) ? ((3*n-5)/8): (((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))))) ? ((n-3)/4): (((((3*n-5)/8)<(((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))) ? ((3*n-5)/8): (((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))))))))) ? ((n+3)/2): (((((9*n+3)/8)<(((((n-3)/4)<(((((3*n-5)/8)<(((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))) ? ((3*n-5)/8): (((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))))) ? ((n-3)/4): (((((3*n-5)/8)<(((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))) ? ((3*n-5)/8): (((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))))))) ? ((9*n+3)/8): (((((n-3)/4)<(((((3*n-5)/8)<(((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))) ? ((3*n-5)/8): (((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))))) ? ((n-3)/4): (((((3*n-5)/8)<(((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))) ? ((3*n-5)/8): (((((5*n-15)/8)<(((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))) ? ((5*n-15)/8): (((((15*n-17)/56)<(((7*n-21)/24))) ? ((15*n-17)/56): (((7*n-21)/24))))))))))))))); i_t += 1)
         for(j_t = ((((-i_t-1)/2)>(((((-8*i_t-n-3)/32)>(((((-4*i_t-n)/24)>(((((4*i_t-n+3)/8)>(((-n+3)/16))) ? ((4*i_t-n+3)/8): (((-n+3)/16))))) ? ((-4*i_t-n)/24): (((((4*i_t-n+3)/8)>(((-n+3)/16))) ? ((4*i_t-n+3)/8): (((-n+3)/16))))))) ? ((-8*i_t-n-3)/32): (((((-4*i_t-n)/24)>(((((4*i_t-n+3)/8)>(((-n+3)/16))) ? ((4*i_t-n+3)/8): (((-n+3)/16))))) ? ((-4*i_t-n)/24): (((((4*i_t-n+3)/8)>(((-n+3)/16))) ? ((4*i_t-n+3)/8): (((-n+3)/16))))))))) ? ((-i_t-1)/2): (((((-8*i_t-n-3)/32)>(((((-4*i_t-n)/24)>(((((4*i_t-n+3)/8)>(((-n+3)/16))) ? ((4*i_t-n+3)/8): (((-n+3)/16))))) ? ((-4*i_t-n)/24): (((((4*i_t-n+3)/8)>(((-n+3)/16))) ? ((4*i_t-n+3)/8): (((-n+3)/16))))))) ? ((-8*i_t-n-3)/32): (((((-4*i_t-n)/24)>(((((4*i_t-n+3)/8)>(((-n+3)/16))) ? ((4*i_t-n+3)/8): (((-n+3)/16))))) ? ((-4*i_t-n)/24): (((((4*i_t-n+3)/8)>(((-n+3)/16))) ? ((4*i_t-n+3)/8): (((-n+3)/16))))))))); j_t <= (((i_t/2)<(((((-4*i_t+n-3)/8)<(((((-8*i_t+3*n-9)/32)<(((n-3)/16))) ? ((-8*i_t+3*n-9)/32): (((n-3)/16))))) ? ((-4*i_t+n-3)/8): (((((-8*i_t+3*n-9)/32)<(((n-3)/16))) ? ((-8*i_t+3*n-9)/32): (((n-3)/16))))))) ? (i_t/2): (((((-4*i_t+n-3)/8)<(((((-8*i_t+3*n-9)/32)<(((n-3)/16))) ? ((-8*i_t+3*n-9)/32): (((n-3)/16))))) ? ((-4*i_t+n-3)/8): (((((-8*i_t+3*n-9)/32)<(((n-3)/16))) ? ((-8*i_t+3*n-9)/32): (((n-3)/16))))))); j_t += 1)
            for(i_l = (((-8*i_t-5)>((((8*i_t+32*j_t+2)>((((24*i_t-4*n+14)>((((16*j_t+2)>((-n+5))) ? (16*j_t+2): ((-n+5))))) ? (24*i_t-4*n+14): ((((16*j_t+2)>((-n+5))) ? (16*j_t+2): ((-n+5))))))) ? (8*i_t+32*j_t+2): ((((24*i_t-4*n+14)>((((16*j_t+2)>((-n+5))) ? (16*j_t+2): ((-n+5))))) ? (24*i_t-4*n+14): ((((16*j_t+2)>((-n+5))) ? (16*j_t+2): ((-n+5))))))))) ? (-8*i_t-5): ((((8*i_t+32*j_t+2)>((((24*i_t-4*n+14)>((((16*j_t+2)>((-n+5))) ? (16*j_t+2): ((-n+5))))) ? (24*i_t-4*n+14): ((((16*j_t+2)>((-n+5))) ? (16*j_t+2): ((-n+5))))))) ? (8*i_t+32*j_t+2): ((((24*i_t-4*n+14)>((((16*j_t+2)>((-n+5))) ? (16*j_t+2): ((-n+5))))) ? (24*i_t-4*n+14): ((((16*j_t+2)>((-n+5))) ? (16*j_t+2): ((-n+5))))))))); i_l <= (((24*i_t+23)<((((8*i_t+32*j_t+39)<((((-8*i_t+4*n-10)<((((48*j_t+2*n+41)<((((16*j_t+2*n+11)<((3*n-7))) ? (16*j_t+2*n+11): ((3*n-7))))) ? (48*j_t+2*n+41): ((((16*j_t+2*n+11)<((3*n-7))) ? (16*j_t+2*n+11): ((3*n-7))))))) ? (-8*i_t+4*n-10): ((((48*j_t+2*n+41)<((((16*j_t+2*n+11)<((3*n-7))) ? (16*j_t+2*n+11): ((3*n-7))))) ? (48*j_t+2*n+41): ((((16*j_t+2*n+11)<((3*n-7))) ? (16*j_t+2*n+11): ((3*n-7))))))))) ? (8*i_t+32*j_t+39): ((((-8*i_t+4*n-10)<((((48*j_t+2*n+41)<((((16*j_t+2*n+11)<((3*n-7))) ? (16*j_t+2*n+11): ((3*n-7))))) ? (48*j_t+2*n+41): ((((16*j_t+2*n+11)<((3*n-7))) ? (16*j_t+2*n+11): ((3*n-7))))))) ? (-8*i_t+4*n-10): ((((48*j_t+2*n+41)<((((16*j_t+2*n+11)<((3*n-7))) ? (16*j_t+2*n+11): ((3*n-7))))) ? (48*j_t+2*n+41): ((((16*j_t+2*n+11)<((3*n-7))) ? (16*j_t+2*n+11): ((3*n-7))))))))))) ? (24*i_t+23): ((((8*i_t+32*j_t+39)<((((-8*i_t+4*n-10)<((((48*j_t+2*n+41)<((((16*j_t+2*n+11)<((3*n-7))) ? (16*j_t+2*n+11): ((3*n-7))))) ? (48*j_t+2*n+41): ((((16*j_t+2*n+11)<((3*n-7))) ? (16*j_t+2*n+11): ((3*n-7))))))) ? (-8*i_t+4*n-10): ((((48*j_t+2*n+41)<((((16*j_t+2*n+11)<((3*n-7))) ? (16*j_t+2*n+11): ((3*n-7))))) ? (48*j_t+2*n+41): ((((16*j_t+2*n+11)<((3*n-7))) ? (16*j_t+2*n+11): ((3*n-7))))))))) ? (8*i_t+32*j_t+39): ((((-8*i_t+4*n-10)<((((48*j_t+2*n+41)<((((16*j_t+2*n+11)<((3*n-7))) ? (16*j_t+2*n+11): ((3*n-7))))) ? (48*j_t+2*n+41): ((((16*j_t+2*n+11)<((3*n-7))) ? (16*j_t+2*n+11): ((3*n-7))))))) ? (-8*i_t+4*n-10): ((((48*j_t+2*n+41)<((((16*j_t+2*n+11)<((3*n-7))) ? (16*j_t+2*n+11): ((3*n-7))))) ? (48*j_t+2*n+41): ((((16*j_t+2*n+11)<((3*n-7))) ? (16*j_t+2*n+11): ((3*n-7))))))))))); i_l += 1)
               for(j_l = ((((i_l+8*i_t+5)/4)>(((((i_l+3)/3)>(((((i_l-16*j_t-14)/2)>((1))) ? ((i_l-16*j_t-14)/2): ((1))))) ? ((i_l+3)/3): (((((i_l-16*j_t-14)/2)>((1))) ? ((i_l-16*j_t-14)/2): ((1))))))) ? ((i_l+8*i_t+5)/4): (((((i_l+3)/3)>(((((i_l-16*j_t-14)/2)>((1))) ? ((i_l-16*j_t-14)/2): ((1))))) ? ((i_l+3)/3): (((((i_l-16*j_t-14)/2)>((1))) ? ((i_l-16*j_t-14)/2): ((1))))))); j_l <= ((((i_l+8*i_t+9)/4)<(((((i_l-16*j_t)/2)<(((((i_l+n-2)/3)<((n-2))) ? ((i_l+n-2)/3): ((n-2))))) ? ((i_l-16*j_t)/2): (((((i_l+n-2)/3)<((n-2))) ? ((i_l+n-2)/3): ((n-2))))))) ? ((i_l+8*i_t+9)/4): (((((i_l-16*j_t)/2)<(((((i_l+n-2)/3)<((n-2))) ? ((i_l+n-2)/3): ((n-2))))) ? ((i_l-16*j_t)/2): (((((i_l+n-2)/3)<((n-2))) ? ((i_l+n-2)/3): ((n-2))))))); j_l += 1)
                  A[t][j_l][-i_l+3*j_l] = (A[t-1][j_l-1][-i_l+3*j_l-1]+A[t-1][j_l-1][-i_l+3*j_l])/9.0;
   polybench_timer_stop();

   polybench_timer_print();
#pragma endscop

}
