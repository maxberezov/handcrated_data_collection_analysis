GENERATED TILE DIRECTION=TP - LOCAL TILE DIRECTION=LP
void kernel_seidel_2d(int tsteps, int n, double A[40+0][40+0][40+0])
{
   int t, i, j;
   //PIPS generated variable
   int i_t, j_t, i_l, j_l;

#pragma scop
   polybench_timer_start();

   for(t = 1; t <= n-1; t += 1)
loop_1:
      for(i_t = ((((-n+3)/16)>(((((-n+3)/8)>(((-3*n+9)/8))) ? ((-n+3)/8): (((-3*n+9)/8))))) ? ((-n+3)/16): (((((-n+3)/8)>(((-3*n+9)/8))) ? ((-n+3)/8): (((-3*n+9)/8))))); i_t <= ((((n-3)/4)<(((((7*n-21)/16)<(((((9*n-27)/16)<(((((11*n-33)/16)<(((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))) ? ((11*n-33)/16): (((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))))) ? ((9*n-27)/16): (((((11*n-33)/16)<(((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))) ? ((11*n-33)/16): (((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))))))) ? ((7*n-21)/16): (((((9*n-27)/16)<(((((11*n-33)/16)<(((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))) ? ((11*n-33)/16): (((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))))) ? ((9*n-27)/16): (((((11*n-33)/16)<(((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))) ? ((11*n-33)/16): (((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))))))))) ? ((n-3)/4): (((((7*n-21)/16)<(((((9*n-27)/16)<(((((11*n-33)/16)<(((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))) ? ((11*n-33)/16): (((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))))) ? ((9*n-27)/16): (((((11*n-33)/16)<(((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))) ? ((11*n-33)/16): (((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))))))) ? ((7*n-21)/16): (((((9*n-27)/16)<(((((11*n-33)/16)<(((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))) ? ((11*n-33)/16): (((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))))) ? ((9*n-27)/16): (((((11*n-33)/16)<(((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))) ? ((11*n-33)/16): (((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))))))))); i_t += 1)
         for(j_t = (((-2*i_t-2)>(((((-32*i_t-n-11)/24)>(((((-24*i_t-n-4)/20)>(((((-16*i_t-n+3)/16)>(((((-8*i_t-n+7)/12)>(((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*i_t-n+7)/12): (((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))) ? ((-16*i_t-n+3)/16): (((((-8*i_t-n+7)/12)>(((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*i_t-n+7)/12): (((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))))) ? ((-24*i_t-n-4)/20): (((((-16*i_t-n+3)/16)>(((((-8*i_t-n+7)/12)>(((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*i_t-n+7)/12): (((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))) ? ((-16*i_t-n+3)/16): (((((-8*i_t-n+7)/12)>(((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*i_t-n+7)/12): (((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))))))) ? ((-32*i_t-n-11)/24): (((((-24*i_t-n-4)/20)>(((((-16*i_t-n+3)/16)>(((((-8*i_t-n+7)/12)>(((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*i_t-n+7)/12): (((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))) ? ((-16*i_t-n+3)/16): (((((-8*i_t-n+7)/12)>(((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*i_t-n+7)/12): (((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))))) ? ((-24*i_t-n-4)/20): (((((-16*i_t-n+3)/16)>(((((-8*i_t-n+7)/12)>(((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*i_t-n+7)/12): (((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))) ? ((-16*i_t-n+3)/16): (((((-8*i_t-n+7)/12)>(((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*i_t-n+7)/12): (((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))))))))) ? (-2*i_t-2): (((((-32*i_t-n-11)/24)>(((((-24*i_t-n-4)/20)>(((((-16*i_t-n+3)/16)>(((((-8*i_t-n+7)/12)>(((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*i_t-n+7)/12): (((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))) ? ((-16*i_t-n+3)/16): (((((-8*i_t-n+7)/12)>(((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*i_t-n+7)/12): (((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))))) ? ((-24*i_t-n-4)/20): (((((-16*i_t-n+3)/16)>(((((-8*i_t-n+7)/12)>(((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*i_t-n+7)/12): (((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))) ? ((-16*i_t-n+3)/16): (((((-8*i_t-n+7)/12)>(((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*i_t-n+7)/12): (((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))))))) ? ((-32*i_t-n-11)/24): (((((-24*i_t-n-4)/20)>(((((-16*i_t-n+3)/16)>(((((-8*i_t-n+7)/12)>(((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*i_t-n+7)/12): (((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))) ? ((-16*i_t-n+3)/16): (((((-8*i_t-n+7)/12)>(((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*i_t-n+7)/12): (((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))))) ? ((-24*i_t-n-4)/20): (((((-16*i_t-n+3)/16)>(((((-8*i_t-n+7)/12)>(((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*i_t-n+7)/12): (((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))) ? ((-16*i_t-n+3)/16): (((((-8*i_t-n+7)/12)>(((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*i_t-n+7)/12): (((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))))))))); j_t <= (((-2*i_t/3)<(((((-8*i_t+n-3)/4)<(((((-16*i_t+n-3)/16)<(((-32*i_t+3*n-9)/24))) ? ((-16*i_t+n-3)/16): (((-32*i_t+3*n-9)/24))))) ? ((-8*i_t+n-3)/4): (((((-16*i_t+n-3)/16)<(((-32*i_t+3*n-9)/24))) ? ((-16*i_t+n-3)/16): (((-32*i_t+3*n-9)/24))))))) ? (-2*i_t/3): (((((-8*i_t+n-3)/4)<(((((-16*i_t+n-3)/16)<(((-32*i_t+3*n-9)/24))) ? ((-16*i_t+n-3)/16): (((-32*i_t+3*n-9)/24))))) ? ((-8*i_t+n-3)/4): (((((-16*i_t+n-3)/16)<(((-32*i_t+3*n-9)/24))) ? ((-16*i_t+n-3)/16): (((-32*i_t+3*n-9)/24))))))); j_t += 1)
            for(i_l = (((16*i_t+16*j_t+2)>((((32*i_t+24*j_t+2)>((((8*j_t-5)>((((-24*j_t-4*n+14)>((-n+5))) ? (-24*j_t-4*n+14): ((-n+5))))) ? (8*j_t-5): ((((-24*j_t-4*n+14)>((-n+5))) ? (-24*j_t-4*n+14): ((-n+5))))))) ? (32*i_t+24*j_t+2): ((((8*j_t-5)>((((-24*j_t-4*n+14)>((-n+5))) ? (-24*j_t-4*n+14): ((-n+5))))) ? (8*j_t-5): ((((-24*j_t-4*n+14)>((-n+5))) ? (-24*j_t-4*n+14): ((-n+5))))))))) ? (16*i_t+16*j_t+2): ((((32*i_t+24*j_t+2)>((((8*j_t-5)>((((-24*j_t-4*n+14)>((-n+5))) ? (-24*j_t-4*n+14): ((-n+5))))) ? (8*j_t-5): ((((-24*j_t-4*n+14)>((-n+5))) ? (-24*j_t-4*n+14): ((-n+5))))))) ? (32*i_t+24*j_t+2): ((((8*j_t-5)>((((-24*j_t-4*n+14)>((-n+5))) ? (-24*j_t-4*n+14): ((-n+5))))) ? (8*j_t-5): ((((-24*j_t-4*n+14)>((-n+5))) ? (-24*j_t-4*n+14): ((-n+5))))))))); i_l <= (((32*i_t+24*j_t+39)<((((48*i_t+48*j_t+2*n+41)<((((16*i_t+16*j_t+2*n+11)<((((-24*j_t+23)<((((8*j_t+4*n-10)<((3*n-7))) ? (8*j_t+4*n-10): ((3*n-7))))) ? (-24*j_t+23): ((((8*j_t+4*n-10)<((3*n-7))) ? (8*j_t+4*n-10): ((3*n-7))))))) ? (16*i_t+16*j_t+2*n+11): ((((-24*j_t+23)<((((8*j_t+4*n-10)<((3*n-7))) ? (8*j_t+4*n-10): ((3*n-7))))) ? (-24*j_t+23): ((((8*j_t+4*n-10)<((3*n-7))) ? (8*j_t+4*n-10): ((3*n-7))))))))) ? (48*i_t+48*j_t+2*n+41): ((((16*i_t+16*j_t+2*n+11)<((((-24*j_t+23)<((((8*j_t+4*n-10)<((3*n-7))) ? (8*j_t+4*n-10): ((3*n-7))))) ? (-24*j_t+23): ((((8*j_t+4*n-10)<((3*n-7))) ? (8*j_t+4*n-10): ((3*n-7))))))) ? (16*i_t+16*j_t+2*n+11): ((((-24*j_t+23)<((((8*j_t+4*n-10)<((3*n-7))) ? (8*j_t+4*n-10): ((3*n-7))))) ? (-24*j_t+23): ((((8*j_t+4*n-10)<((3*n-7))) ? (8*j_t+4*n-10): ((3*n-7))))))))))) ? (32*i_t+24*j_t+39): ((((48*i_t+48*j_t+2*n+41)<((((16*i_t+16*j_t+2*n+11)<((((-24*j_t+23)<((((8*j_t+4*n-10)<((3*n-7))) ? (8*j_t+4*n-10): ((3*n-7))))) ? (-24*j_t+23): ((((8*j_t+4*n-10)<((3*n-7))) ? (8*j_t+4*n-10): ((3*n-7))))))) ? (16*i_t+16*j_t+2*n+11): ((((-24*j_t+23)<((((8*j_t+4*n-10)<((3*n-7))) ? (8*j_t+4*n-10): ((3*n-7))))) ? (-24*j_t+23): ((((8*j_t+4*n-10)<((3*n-7))) ? (8*j_t+4*n-10): ((3*n-7))))))))) ? (48*i_t+48*j_t+2*n+41): ((((16*i_t+16*j_t+2*n+11)<((((-24*j_t+23)<((((8*j_t+4*n-10)<((3*n-7))) ? (8*j_t+4*n-10): ((3*n-7))))) ? (-24*j_t+23): ((((8*j_t+4*n-10)<((3*n-7))) ? (8*j_t+4*n-10): ((3*n-7))))))) ? (16*i_t+16*j_t+2*n+11): ((((-24*j_t+23)<((((8*j_t+4*n-10)<((3*n-7))) ? (8*j_t+4*n-10): ((3*n-7))))) ? (-24*j_t+23): ((((8*j_t+4*n-10)<((3*n-7))) ? (8*j_t+4*n-10): ((3*n-7))))))))))); i_l += 1)
               for(j_l = ((((i_l-16*i_t-16*j_t-14)/2)>(((((i_l+3)/3)>(((((i_l-8*j_t+5)/4)>((1))) ? ((i_l-8*j_t+5)/4): ((1))))) ? ((i_l+3)/3): (((((i_l-8*j_t+5)/4)>((1))) ? ((i_l-8*j_t+5)/4): ((1))))))) ? ((i_l-16*i_t-16*j_t-14)/2): (((((i_l+3)/3)>(((((i_l-8*j_t+5)/4)>((1))) ? ((i_l-8*j_t+5)/4): ((1))))) ? ((i_l+3)/3): (((((i_l-8*j_t+5)/4)>((1))) ? ((i_l-8*j_t+5)/4): ((1))))))); j_l <= ((((i_l-16*i_t-16*j_t)/2)<(((((i_l-8*j_t+9)/4)<(((((i_l+n-2)/3)<((n-2))) ? ((i_l+n-2)/3): ((n-2))))) ? ((i_l-8*j_t+9)/4): (((((i_l+n-2)/3)<((n-2))) ? ((i_l+n-2)/3): ((n-2))))))) ? ((i_l-16*i_t-16*j_t)/2): (((((i_l-8*j_t+9)/4)<(((((i_l+n-2)/3)<((n-2))) ? ((i_l+n-2)/3): ((n-2))))) ? ((i_l-8*j_t+9)/4): (((((i_l+n-2)/3)<((n-2))) ? ((i_l+n-2)/3): ((n-2))))))); j_l += 1)
                  A[t][j_l][-i_l+3*j_l] = (A[t-1][j_l-1][-i_l+3*j_l-1]+A[t-1][j_l-1][-i_l+3*j_l])/9.0;
   polybench_timer_stop();

   polybench_timer_print();
#pragma endscop

}
void kernel_seidel_2d(int tsteps, int n, double A[40+0][40+0][40+0])
{
   int t, i, j;
   //PIPS generated variable
   int i_t, j_t, i_l, j_l;

#pragma scop
   polybench_timer_start();

   for(t = 1; t <= n-1; t += 1)
loop_1:
      for(i_t = ((((-n+3)/16)>(((((-n+3)/8)>(((-3*n+9)/8))) ? ((-n+3)/8): (((-3*n+9)/8))))) ? ((-n+3)/16): (((((-n+3)/8)>(((-3*n+9)/8))) ? ((-n+3)/8): (((-3*n+9)/8))))); i_t <= ((((n-3)/4)<(((((7*n-21)/16)<(((((9*n-27)/16)<(((((11*n-33)/16)<(((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))) ? ((11*n-33)/16): (((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))))) ? ((9*n-27)/16): (((((11*n-33)/16)<(((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))) ? ((11*n-33)/16): (((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))))))) ? ((7*n-21)/16): (((((9*n-27)/16)<(((((11*n-33)/16)<(((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))) ? ((11*n-33)/16): (((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))))) ? ((9*n-27)/16): (((((11*n-33)/16)<(((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))) ? ((11*n-33)/16): (((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))))))))) ? ((n-3)/4): (((((7*n-21)/16)<(((((9*n-27)/16)<(((((11*n-33)/16)<(((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))) ? ((11*n-33)/16): (((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))))) ? ((9*n-27)/16): (((((11*n-33)/16)<(((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))) ? ((11*n-33)/16): (((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))))))) ? ((7*n-21)/16): (((((9*n-27)/16)<(((((11*n-33)/16)<(((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))) ? ((11*n-33)/16): (((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))))) ? ((9*n-27)/16): (((((11*n-33)/16)<(((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))) ? ((11*n-33)/16): (((((13*n-39)/16)<(((15*n-45)/16))) ? ((13*n-39)/16): (((15*n-45)/16))))))))))); i_t += 1)
         for(j_t = (((-2*i_t-2)>(((((-32*i_t-n-11)/24)>(((((-24*i_t-n-4)/20)>(((((-16*i_t-n+3)/16)>(((((-8*i_t-n+7)/12)>(((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*i_t-n+7)/12): (((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))) ? ((-16*i_t-n+3)/16): (((((-8*i_t-n+7)/12)>(((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*i_t-n+7)/12): (((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))))) ? ((-24*i_t-n-4)/20): (((((-16*i_t-n+3)/16)>(((((-8*i_t-n+7)/12)>(((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*i_t-n+7)/12): (((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))) ? ((-16*i_t-n+3)/16): (((((-8*i_t-n+7)/12)>(((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*i_t-n+7)/12): (((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))))))) ? ((-32*i_t-n-11)/24): (((((-24*i_t-n-4)/20)>(((((-16*i_t-n+3)/16)>(((((-8*i_t-n+7)/12)>(((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*i_t-n+7)/12): (((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))) ? ((-16*i_t-n+3)/16): (((((-8*i_t-n+7)/12)>(((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*i_t-n+7)/12): (((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))))) ? ((-24*i_t-n-4)/20): (((((-16*i_t-n+3)/16)>(((((-8*i_t-n+7)/12)>(((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*i_t-n+7)/12): (((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))) ? ((-16*i_t-n+3)/16): (((((-8*i_t-n+7)/12)>(((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*i_t-n+7)/12): (((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))))))))) ? (-2*i_t-2): (((((-32*i_t-n-11)/24)>(((((-24*i_t-n-4)/20)>(((((-16*i_t-n+3)/16)>(((((-8*i_t-n+7)/12)>(((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*i_t-n+7)/12): (((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))) ? ((-16*i_t-n+3)/16): (((((-8*i_t-n+7)/12)>(((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*i_t-n+7)/12): (((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))))) ? ((-24*i_t-n-4)/20): (((((-16*i_t-n+3)/16)>(((((-8*i_t-n+7)/12)>(((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*i_t-n+7)/12): (((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))) ? ((-16*i_t-n+3)/16): (((((-8*i_t-n+7)/12)>(((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*i_t-n+7)/12): (((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))))))) ? ((-32*i_t-n-11)/24): (((((-24*i_t-n-4)/20)>(((((-16*i_t-n+3)/16)>(((((-8*i_t-n+7)/12)>(((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*i_t-n+7)/12): (((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))) ? ((-16*i_t-n+3)/16): (((((-8*i_t-n+7)/12)>(((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*i_t-n+7)/12): (((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))))) ? ((-24*i_t-n-4)/20): (((((-16*i_t-n+3)/16)>(((((-8*i_t-n+7)/12)>(((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*i_t-n+7)/12): (((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))) ? ((-16*i_t-n+3)/16): (((((-8*i_t-n+7)/12)>(((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))) ? ((-8*i_t-n+7)/12): (((((-8*i_t-3*n+21)/20)>(((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))) ? ((-8*i_t-3*n+21)/20): (((((-n+6)/4)>(((-5*n+22)/8))) ? ((-n+6)/4): (((-5*n+22)/8))))))))))))))); j_t <= (((-2*i_t/3)<(((((-8*i_t+n-3)/4)<(((((-16*i_t+n-3)/16)<(((-32*i_t+3*n-9)/24))) ? ((-16*i_t+n-3)/16): (((-32*i_t+3*n-9)/24))))) ? ((-8*i_t+n-3)/4): (((((-16*i_t+n-3)/16)<(((-32*i_t+3*n-9)/24))) ? ((-16*i_t+n-3)/16): (((-32*i_t+3*n-9)/24))))))) ? (-2*i_t/3): (((((-8*i_t+n-3)/4)<(((((-16*i_t+n-3)/16)<(((-32*i_t+3*n-9)/24))) ? ((-16*i_t+n-3)/16): (((-32*i_t+3*n-9)/24))))) ? ((-8*i_t+n-3)/4): (((((-16*i_t+n-3)/16)<(((-32*i_t+3*n-9)/24))) ? ((-16*i_t+n-3)/16): (((-32*i_t+3*n-9)/24))))))); j_t += 1)
            for(i_l = (((16*i_t+16*j_t+2)>((((32*i_t+24*j_t+2)>((((8*j_t-5)>((((-24*j_t-4*n+14)>((-n+5))) ? (-24*j_t-4*n+14): ((-n+5))))) ? (8*j_t-5): ((((-24*j_t-4*n+14)>((-n+5))) ? (-24*j_t-4*n+14): ((-n+5))))))) ? (32*i_t+24*j_t+2): ((((8*j_t-5)>((((-24*j_t-4*n+14)>((-n+5))) ? (-24*j_t-4*n+14): ((-n+5))))) ? (8*j_t-5): ((((-24*j_t-4*n+14)>((-n+5))) ? (-24*j_t-4*n+14): ((-n+5))))))))) ? (16*i_t+16*j_t+2): ((((32*i_t+24*j_t+2)>((((8*j_t-5)>((((-24*j_t-4*n+14)>((-n+5))) ? (-24*j_t-4*n+14): ((-n+5))))) ? (8*j_t-5): ((((-24*j_t-4*n+14)>((-n+5))) ? (-24*j_t-4*n+14): ((-n+5))))))) ? (32*i_t+24*j_t+2): ((((8*j_t-5)>((((-24*j_t-4*n+14)>((-n+5))) ? (-24*j_t-4*n+14): ((-n+5))))) ? (8*j_t-5): ((((-24*j_t-4*n+14)>((-n+5))) ? (-24*j_t-4*n+14): ((-n+5))))))))); i_l <= (((32*i_t+24*j_t+39)<((((48*i_t+48*j_t+2*n+41)<((((16*i_t+16*j_t+2*n+11)<((((-24*j_t+23)<((((8*j_t+4*n-10)<((3*n-7))) ? (8*j_t+4*n-10): ((3*n-7))))) ? (-24*j_t+23): ((((8*j_t+4*n-10)<((3*n-7))) ? (8*j_t+4*n-10): ((3*n-7))))))) ? (16*i_t+16*j_t+2*n+11): ((((-24*j_t+23)<((((8*j_t+4*n-10)<((3*n-7))) ? (8*j_t+4*n-10): ((3*n-7))))) ? (-24*j_t+23): ((((8*j_t+4*n-10)<((3*n-7))) ? (8*j_t+4*n-10): ((3*n-7))))))))) ? (48*i_t+48*j_t+2*n+41): ((((16*i_t+16*j_t+2*n+11)<((((-24*j_t+23)<((((8*j_t+4*n-10)<((3*n-7))) ? (8*j_t+4*n-10): ((3*n-7))))) ? (-24*j_t+23): ((((8*j_t+4*n-10)<((3*n-7))) ? (8*j_t+4*n-10): ((3*n-7))))))) ? (16*i_t+16*j_t+2*n+11): ((((-24*j_t+23)<((((8*j_t+4*n-10)<((3*n-7))) ? (8*j_t+4*n-10): ((3*n-7))))) ? (-24*j_t+23): ((((8*j_t+4*n-10)<((3*n-7))) ? (8*j_t+4*n-10): ((3*n-7))))))))))) ? (32*i_t+24*j_t+39): ((((48*i_t+48*j_t+2*n+41)<((((16*i_t+16*j_t+2*n+11)<((((-24*j_t+23)<((((8*j_t+4*n-10)<((3*n-7))) ? (8*j_t+4*n-10): ((3*n-7))))) ? (-24*j_t+23): ((((8*j_t+4*n-10)<((3*n-7))) ? (8*j_t+4*n-10): ((3*n-7))))))) ? (16*i_t+16*j_t+2*n+11): ((((-24*j_t+23)<((((8*j_t+4*n-10)<((3*n-7))) ? (8*j_t+4*n-10): ((3*n-7))))) ? (-24*j_t+23): ((((8*j_t+4*n-10)<((3*n-7))) ? (8*j_t+4*n-10): ((3*n-7))))))))) ? (48*i_t+48*j_t+2*n+41): ((((16*i_t+16*j_t+2*n+11)<((((-24*j_t+23)<((((8*j_t+4*n-10)<((3*n-7))) ? (8*j_t+4*n-10): ((3*n-7))))) ? (-24*j_t+23): ((((8*j_t+4*n-10)<((3*n-7))) ? (8*j_t+4*n-10): ((3*n-7))))))) ? (16*i_t+16*j_t+2*n+11): ((((-24*j_t+23)<((((8*j_t+4*n-10)<((3*n-7))) ? (8*j_t+4*n-10): ((3*n-7))))) ? (-24*j_t+23): ((((8*j_t+4*n-10)<((3*n-7))) ? (8*j_t+4*n-10): ((3*n-7))))))))))); i_l += 1)
               for(j_l = ((((i_l-16*i_t-16*j_t-14)/2)>(((((i_l+3)/3)>(((((i_l-8*j_t+5)/4)>((1))) ? ((i_l-8*j_t+5)/4): ((1))))) ? ((i_l+3)/3): (((((i_l-8*j_t+5)/4)>((1))) ? ((i_l-8*j_t+5)/4): ((1))))))) ? ((i_l-16*i_t-16*j_t-14)/2): (((((i_l+3)/3)>(((((i_l-8*j_t+5)/4)>((1))) ? ((i_l-8*j_t+5)/4): ((1))))) ? ((i_l+3)/3): (((((i_l-8*j_t+5)/4)>((1))) ? ((i_l-8*j_t+5)/4): ((1))))))); j_l <= ((((i_l-16*i_t-16*j_t)/2)<(((((i_l-8*j_t+9)/4)<(((((i_l+n-2)/3)<((n-2))) ? ((i_l+n-2)/3): ((n-2))))) ? ((i_l-8*j_t+9)/4): (((((i_l+n-2)/3)<((n-2))) ? ((i_l+n-2)/3): ((n-2))))))) ? ((i_l-16*i_t-16*j_t)/2): (((((i_l-8*j_t+9)/4)<(((((i_l+n-2)/3)<((n-2))) ? ((i_l+n-2)/3): ((n-2))))) ? ((i_l-8*j_t+9)/4): (((((i_l+n-2)/3)<((n-2))) ? ((i_l+n-2)/3): ((n-2))))))); j_l += 1)
                  A[t][j_l][-i_l+3*j_l] = (A[t-1][j_l-1][-i_l+3*j_l-1]+A[t-1][j_l-1][-i_l+3*j_l])/9.0;
   polybench_timer_stop();

   polybench_timer_print();
#pragma endscop

}
